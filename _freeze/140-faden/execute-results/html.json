{
  "hash": "d777fb9af964f00aa7b35f8156d29efb",
  "result": {
    "markdown": "\n# Der rote Faden\n\n\n\n\n## Lernsteuerung\n\n### Überblick\n\nMittlerweile haben wir einiges zum Thema Data Science bzw. maschinelles Lernen behandelt (und sie hoffentlich viel gelernt).\n\nDa ist es an der Zeit, einen Schritt zurück zu treten,\num sich einen Überblick über den gegangenen Weg zu verschaffen,\nden berühmten \"roten Faden\" zu sehen, den zurückgelegten Weg nachzuzeichnen \nin den groben Linien, um einen (klareren) Überblick über das Terrain zu bekommen.\n\nIn diesem Kapitel werden wir verschiedene \"Aussichtspfade\" suchen, um im Bild zu bleiben,\ndie uns einen Überblick über das Gelände versprechen.\n\n###  Lernziele\n- Sie erarbeiten sich einen Überblick über den bisher gelernten Stoff bzw. verfeinern Ihren bestehenden Überblick\n\n\n### Literatur\n\n- Rhys im Überblick\n\n\n\n\n### R-Pakete und Daten\n\n\nIn diesem Kapitel werden folgende R-Pakete benötigt:\n\n\n::: {.cell hash='140-faden_cache/html/unnamed-chunk-1_443c286ed68ce33bfed5eb54308e7b8c'}\n\n```{.r .cell-code}\nlibrary(tidymodels)\nlibrary(tictoc)  # Zeitmessung\n```\n:::\n\n\n\n\n\n\n\n## Aussichtspunkt 1: Blick vom hohen Berg\n\n\nUnd so zeigt sich ein \"Flussbild\"^[Wem das Bild zu klein gezeichnet ist, der nehme entweder eine Lupe oder öffne das Bild per Rechtsklick in einem neuen Tab.] (@fig-fluss).\n\n\n\n\n```{mermaid}\n%%| label: fig-fluss\n%%| fig-cap: Ein Flussbild des maschinellen Lernens\n\nflowchart LR\n  Vv[Vorverarbeitung] --> W[Workflow]\n  MF[Modellformel] --> W[Workflow]\n  Mo[Modell] --> W[Workflow]\n  Al[Algorithmus] --> Mo\n  Im[Implementierung] --> Mo\n  Mod[Modus] --> Mo\n  St[z.B. Standardisierung] --> Vv\n  FW[z.B. Fehlende Werte] --> Vv\n  W -- für jeden Workflow --> Tuning\n  subgraph Tuning\nsubgraph Resampling\n  subgraph Fitten\n  end\nend\n  end\n  Tuning --> bM[bester Modellkandidat]\n  bM --> FT[Fitten auf ganz Train-Sample]\n  FT --> PT[Predict auf Test-Sample]\n  PT -->  MG[Modellgüte]\n  MG --> num[numerisch]\n  MG --> klas[klassifikatorisch]\n\n```\n\n\n\n\n\n\n\n\n\nDer Reiseführer erzählt uns zu diesem Bild folgende Geschichte:\n\n\n\n{{< video https://www.youtube.com/embed/PO-UrF5hGtY >}}\n\n\n\n\n<!-- <iframe width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/PO-UrF5hGtY\" title=\"YouTube video player\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe> -->\n\n[Video-Geschichte](https://youtu.be/PO-UrF5hGtY)\n\n## Aussichtspunkt 2: Blick in den Hof der Handwerker\n\nWenn man auf einem hohen Berg gestanden ist, hat man zwar einen guten Überblick über das Land bekommen,\naber das konkrete Tun bleibt auf solchen Höhen verborgen.\n\nMöchte man wissen, wie das geschäftige Leben abläuft, muss man also den tätigen Menschen über die Schulter schauen.\nWerfen wir also einen Blick in den \"Hof der Handwerker\",\nwo grundlegende Werkstücke gefertigt werden,\nund wir jeden Handgriff aus der Nähe mitverfolgen können.\n\n\n\n### Ein maximale einfaches Werkstück mit Tidymodels\n\nWeniger blumig ausgedrückt: Schauen wir uns ein maximal einfaches Beispiel an,\nwie man mit Tidymodels Vorhersagen tätigt.\nGenauer gesagt bearbeiten wir [einen sehr einfachen Ansatz](https://www.kaggle.com/code/ssauer/simple-linear-model-tidymodels) für einen Kaggle-Prognosewettbewerb.\n\n\n\n<iframe width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/QHbIONGgMrA\" frameborder=\"0\" allowfullscreen></iframe>\n\n\n\n### Ein immer noch recht einfaches Werkstück mit Tidymodels\n\nDieses Beispiel ist nur wenig aufwändiger als das vorherige.\n\n\n<iframe width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/QS94JTMpnHc\" frameborder=\"0\" allowfullscreen></iframe>\n\n\n\n\n## Aussichtspunkt 3: Der Nebelberg (Quiz)\n\nDa der \"Nebelberg\" zumeist in Wolken verhüllt ist, muss man, wenn man ihn ersteigt und ins Land hinunterschaut,\nerraten, welche Teile zu sehen sind. Sozusagen eine Art Landschafts-Quiz.\n\nVoilà, hier ist es, das *Quiz* zum maschinellen Lernen:\n\n<iframe src=\"https://docs.google.com/forms/d/e/1FAIpQLSdw9ngLAcs7VMaF5P-nRSS8zCBjLdJyPYXsGTzy1ERmD6oPcQ/viewform?embedded=true\" width=\"640\" height=\"930\" frameborder=\"0\" marginheight=\"0\" marginwidth=\"0\">Loading…</iframe>\n\n\n\n\n\n## Aussichtspunkt 4: Der Exerzitien-Park\n\nWir stehen vor dem Eingang zu einem Park,\nin dem sich viele Menschen an merkwürdigen Übungen, Exerzitien, befleißigen.\nVielleicht wollen Sie sich auch an einigen Übungen abhärten? Bitte schön,\nlassen Sie sich nicht von mir aufhalten.\n\n\n\n::: {.cell hash='140-faden_cache/html/yacsdas_3c64ce8807289377953ffe77e39d8dd2'}\n\nYACSDA: Yet Another Case Study on Data Analysis\n\n\n...\n\n**NUR EXPLORATIVE DATENANALYSE**\n\n- [Datenjudo mit Pinguinen](https://allisonhorst.shinyapps.io/dplyr-learnr/#section-welcome)\n\n- [Data-Wranglinng-Aufgaben zur Lebenserwartung](https://data-se.netlify.app/2021/02/24/exercises-to-data-wrangling-with-the-tidyverse/)\n\n- [Aufgabe zur Datenvisualisierung des Diamantenpreises](https://data-se.netlify.app/2020/12/07/ex-visualizing-diamonds/)\n\n- [Fallstudie Flugverspätungen - EDA](https://data-se.netlify.app/2021/03/08/eda-zu-flugversp%C3%A4tungen/)\n\n- [Fallstudie zur EDA: Top-Gear](https://data-se.netlify.app/2021/02/11/yacda-topgear/)\n\n- [Fallstudie zur EDA:  OECD-Wellbeing-Studie](https://data-se.netlify.app/2021/02/11/explorative-datenanalyse-zum-datensatz-oecd-wellbeing/)\n\n- [Fallstudie zur EDA: Movie Rating](https://minimaxir.com/2018/07/imdb-data-analysis/)\n\n- [Fallstudie zur EDA: Women in Parliament](https://github.com/saghirb/WiP-tidyverse/blob/master/doc/WiP-tidyverse.pdf)\n\n- [Finde den Tag mit den meisten Flugverspätungen, Datensatz 'nycflights13'](https://data-se.netlify.app/2021/05/27/datensatz-flights-finde-den-tag-mit-den-meisten-abfl%C3%BCgen/)\n\n\n\n\n**NUR LINEARE MODELL**\n\n- [Beispiel für Prognosemodellierung 1, grundlegender Anspruch, Video](https://youtu.be/5pBTHrnRIZY)\n\n- [Beispiel für Ihre Prognosemodellierung 2, mittlerer  Anspruch](https://data-se.netlify.app/2020/11/13/fallstudie-zur-regressionsanalyse-ggplot2movies/)\n\n- [Beispiel für Ihre Prognosemodellierung 3, hoher Anspruch](https://data-se.netlify.app/2021/03/10/fallstudie-modellierung-von-flugversp%C3%A4tungen/)\n\n- [Fallstudie: Modellierung von Flugverspätungen](https://data-se.netlify.app/2021/03/10/fallstudie-modellierung-von-flugversp%C3%A4tungen/)\n\n\n- [Movies](https://data-se.netlify.app/2020/11/13/fallstudie-zur-regressionsanalyse-ggplot2movies/)\n\n\n- [Fallstudie Einfache lineare Regression in Base-R, Anfängerniveau, Kaggle-Competition TMDB](https://www.kaggle.com/code/ssauer/tmdb-simple-regression-beginners)\n\n\n- [Fallstudie Sprit sparen](https://data-se.netlify.app/2022/05/02/fallstudie-spritverbrauch/)\n\n\n**YouTube-PLAYLISTS**\n\n- [Playlist YACSDAs](https://youtube.com/playlist?list=PLRR4REmBgpIGet_lcNf2wOd0W8j4c9hYN)\n\n- [Playlist zur Prüfungsleistung Prognosewettbewerb](https://youtube.com/playlist?list=PLRR4REmBgpIH6uG8LZWPTSMReX1OFxfUx)\n\n- [Kaggle-Fallstudie TMDB: einfache lineare Regression](https://youtu.be/vR9l-k50I1M)\n\n- [Playlist zum statistischen Modellieren](https://www.youtube.com/playlist?list=PLRR4REmBgpIGWcSjrtt0m36aXHLaiTgdF)\n\n\n**MASCHINELLES LERNEN MIT TIDYMODELS**\n\n- [Experimenting with machine learning in R with tidymodels and the Kaggle titanic dataset](https://www.r-bloggers.com/2021/08/experimenting-with-machine-learning-in-r-with-tidymodels-and-the-kaggle-titanic-dataset/)\n\n\n\n\n- [Tutorial on tidymodels for Machine Learning](https://hansjoerg.me/2020/02/09/tidymodels-for-machine-learning/)\n\n\n\n- [Classification with Tidymodels, Workflows and Recipes](https://www.kirenz.com/post/2021-02-17-r-classification-tidymodels/)\n\n\n\n- [A (mostly!) tidyverse tour of the Titanic](https://www.kaggle.com/code/varimp/a-mostly-tidyverse-tour-of-the-titanic/report)\n\n\n\n- [Personalised Medicine - EDA with tidy R](https://www.kaggle.com/code/headsortails/personalised-medicine-eda-with-tidy-r/report)\n\n\n\n- [Tidy TitaRnic](https://www.kaggle.com/code/headsortails/tidy-titarnic/report)\n\n\n\n\n\n\n\n- [Fallstudie Seegurken](https://www.tidymodels.org/start/models/)\n\n\n- [Sehr einfache Fallstudie zur Modellierung einer Regression mit tidymodels](https://juliasilge.com/blog/student-debt/)\n\n- [Fallstudie zur linearen Regression mit Tidymodels](https://www.gmudatamining.com/lesson-10-r-tutorial.html)\n\n- [Analyse zum Verlauf von Covid-Fällen](https://github.com/sebastiansauer/covid-icu)\n\n- [Fallstudie zur Modellierung einer logististischen Regression mit tidymodels](https://onezero.blog/modelling-binary-logistic-regression-using-tidymodels-library-in-r-part-1/)\n\n\n- [Fallstudie zu Vulkanausbrüchen](https://juliasilge.com/blog/multinomial-volcano-eruptions/)\n\n- [Fallstudie Himalaya](https://juliasilge.com/blog/himalayan-climbing/)\n\n- [Fallstudien zu Studiengebühren](https://juliasilge.com/blog/tuition-resampling/)\n\n- [1. Modell der Fallstudie Hotel Bookings](https://www.tidymodels.org/start/case-study/)\n\n- [Aufgaben zur logistischen Regression, PDF](https://github.com/sebastiansauer/datascience1/blob/main/Aufgaben/Thema8-Loesungen1.pdf)\n\n- [Fallstudie Oregon Schools](https://bcullen.rbind.io/post/2020-06-02-tidymodels-decision-tree-learning-in-r/)\n\n- [Fallstudie Windturbinen](https://juliasilge.com/blog/wind-turbine/)\n\n- [Fallstudie Churn](https://www.gmudatamining.com/lesson-13-r-tutorial.html)\n\n\n- [Einfache Durchführung eines Modellierung mit XGBoost](https://data-se.netlify.app/2020/12/14/titanic-tidymodels-boost/)\n\n- [Fallstudie Oregon Schools](https://bcullen.rbind.io/post/2020-06-02-tidymodels-decision-tree-learning-in-r/)\n\n- [Fallstudie Churn](https://www.gmudatamining.com/lesson-13-r-tutorial.html)\n\n- [Fallstudie Ikea](https://juliasilge.com/blog/ikea-prices/)\n\n- [Fallstudie Wasserquellen in Sierra Leone](https://juliasilge.com/blog/water-sources/)\n\n- [Fallstudie Bäume in San Francisco](https://dev.to/juliasilge/tuning-random-forest-hyperparameters-in-r-with-tidytuesday-trees-data-4ilh)\n\n- [Fallstudie Vulkanausbrüche](https://juliasilge.com/blog/multinomial-volcano-eruptions/)\n\n- [Fallstudie Brettspiele mit XGBoost](https://juliasilge.com/blog/board-games/)\n\n\n- [Fallstudie Serie The Office](https://juliasilge.com/blog/lasso-the-office/)\n\n- [Fallstudie NBER Papers](https://juliasilge.com/blog/nber-papers/)\n\n\n- [Fallstudie Einfache lineare Regression mit Tidymodels, Kaggle-Competition TMDB](https://www.kaggle.com/ssauer/simple-linear-model-tidymodels)\n\n- [Fallstudie Einfaches Random-Forest-Modell mit Tidymodels, Kaggle-Competition TMDB](https://www.kaggle.com/code/ssauer/simple-rf-tuned)\n\n- [Fallstudie Workflow-Set mit Tidymodels, Kaggle-Competition TMDB](https://www.kaggle.com/ssauer/tmdb-xgboost-tidymodels)\n\n- [Fallstudie Titanic mit Tidymodels bei Kaggle](https://www.kaggle.com/code/modesty520/a-tutorial-with-tidymodels/report#modeling)\n\n- [Einfache Fallstudie mit Tidymodels bei Kaggle](https://www.kaggle.com/code/benthecoder/tidymodels-in-r-using-measles-data/notebook)\n:::\n\n\n\n\n## Aussichtspunkt 5: In der Bibliothek\n\n\nEinen Überblick über eine Landschaft gewinnt man nicht nur von ausgesetzten Wegpunkten aus,\nsondern auch, manchmal, aus Schriftstücken.\nHier ist eine Auswahl an Literatur,\ndie Grundlagen zu unserem Landstrich erläutert.\n\n\n- @rhys\n- @silge_tidy_2022\n\n\nEtwas weiter leiten uns diese Erzähler:\n\n- @islr\n- @kuhn\n\n\n\n## Krafttraining\n\nUm die Aussicht genießen zu können, muss man manchmal ausgesetzte Plätze \nin ~~schwindelerregenden~~ ~~einigermaßen steilen~~ als Hügel erkennbaren Höhen erreichen...\n\nSportliche Leistungen erreicht nur, wer trainiert ist.\nDas ist im Land des Data Science nicht anders.\n\nHier ist eine Liste von Übungen, die Ihre Datenkraft stählen soll:\n\n1. *Lerngruppe*: Den Wert einer Lerngruppe kann man kaum unterschätzen. Die Motivation, der Austausch, der Zwang seine Gedanken geordnet darzustellen, das wechselseitige Abfragen - diese Dinge machen eine Lerngruppe zu einem der wichtigsten Erfolgsgarant in Ihren Lernbemühungen.\n2. *Exzerpte*: Exzerpte, Zusammenfassungen also, sind nötig, um von einer vermeintlichen \"Jaja, easy, versthe ich alles\" Oberflächen-Verarbeitung zu einem (ausgeprägterem) Tiefenverständnis vorzudringen.\n3. *Aufgaben*: Manchmal stellt ein Dozent Aufgaben ein. Die Chance sollte man nutzen, denn zwar ist vieles in der Didaktikforschung noch unsicher, aber dass Aufgaben lösen beim Lernen hilft, und zwar viel, ist eines der wenigen unstrittigen Erkenntnisse.\n4. *Fallstudien*: Ähnliches wie Aufgaben, die oft kleinteilig-akademisch angelegt sind, hilft die große Schwester der schnöden Aufgabe, die Fallstudie, beim Vordringen in Verständnistiefen.\n5. *Lesen*: Ja, Lesen ist voll Old School. Aber so was Ähnliches wie Updaten der Brain-Software. Nützlich, weil die alte Software irgendwann nicht mehr supported wird.\n6. *Forum*: Sie haben eine Frage, aber Sie können unmöglich ein paar Tage warten, bis Sie den Dozenten im Unterricht sprechen? Posten Sie die Frage in einem Forum! Vielleicht im Forum des Moduls oder aber in einem geeigneten Forum im Internet.\n7. *Youtube*: Zwar wettern Dozentis gerne über die mangelnde Verarbeitungstiefe beim Fern schauen. Außerdem sind Lehrvideos didaktisch echt asbachuralt. Aber okay, manchmal und in überschaubarer Dosis ist ein Lehrvideo eine nützliche Ergänzung zu den übrigen Maßnahmen.\n\n\n\n\n\n<!-- ## Aufgaben und Vertiefung -->\n\n## Ressourcen\n\n### Aufgaben\n\nIm [Datenwerk](https://datenwerk.netlify.app/) unter dem Tag [stat-learning](https://datenwerk.netlify.app/#category=stat-learning) und [tidymodels](https://datenwerk.netlify.app/#category=tidymodels) finden Sie einen Fundus an Aufgaben zur prädiktiven Modellierung.\n\n\n### Kaggle-Fallstudien \n\nIn @sec-yacsdas-tidymodels finden Sie eine Fallstudien-Sammlung.\n\n \n- [Einfache Random-Forest-Modellierung bei Kaggle (TMDB)](https://www.kaggle.com/code/ssauer/simple-rf-tuned)\n- [Einfache Workflow-Set-Modellierung bei Kaggle (TMDB)](https://www.kaggle.com/code/ssauer/tmdb-xgboost-tidymodels)\n- Bearbeiten Sie so viele Fallstudien der Fallstudiensammlung wie nötig, um den Stoff flüssig zu beherrschen\n\n\n\n### Rollenspiel: Ace your Case\n\n\nDie Lernziele dieses Moduls sind kompetenzorientiert; Theorie spielt nur die zweite Geige.\nAber im praktischem Leben genügt es (oft) nicht, bestimmte Kompetenzen zu besitzen.\nMan muss auch Menschen überzeugen, dass man diese Kompetenzen besitzt.\nDaher sollten Sie sich darin üben, andere von Ihrer Kompetenz zu überzeugen.\n\nDazu simulieren wir im Rahmen eines Rollenspiels eine Bewerbungsinterview,\nin dem Sie Fachfragen oder eine Fallstudie (\"Case\") durchsprechen und hier brillieren wollen (\"Ace your Case\").\n\n- Studenti A 🧑‍🎓 - Bewerber\n- Studenti B 👩‍🎓  - Interviewer\n\n\n\n\n\n### LinkedIn Skill Assessments\n\nDie [LinkedIn Skill Assessments](https://www.linkedin.com/help/linkedin/answer/a507734?trk=hc-articlePage-sidebar) sind eine Sammlung von Quizzen, die LinkedIn bereitstellt.\nMan kann diese Quizze antreten, und wenn man besteht, fügt LinkedIn ein entsprechendes Badge zum persönlichen Profil hinzu.\n\nFür Data Science sind z.B. die Quizze für [Machine Learning](https://www.linkedin.com/help/linkedin/answer/a514076) und Programmiersprachen wie  [R](https://www.linkedin.com/help/linkedin/answer/a510481) interessant.\n\nPraktischerweise kann man sich anhand relevanter Fragen (und deren Lösungen) üben;\n[hier](https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/blob/main/machine-learning/machine-learning-quiz.md) finden sich Fragen und Antworten zum Data Science Quiz.\nFür R findet sich [in diesem R](https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/blob/main/r/r-quiz.md) eine Auswahl von Quizfragen sowie deren Lösungen.\n\n\n\n\n\n\n\n\n\n\n\n\n\n### Blaupausen (Template) via `usemodel`\n\nEine Möglichkeit, sich die Syntax für eine typische Tidymodels-Analyse ausgeben zu lassen, bietet das Paket `{usemodels}`.\n\nLassen wir uns einen Code-Schnipsel ausgeben für ein Random-Forest-Modell mit dem Engine `ranger`:\n\n\n\n::: {.cell hash='140-faden_cache/html/unnamed-chunk-3_14009acee8556cead0241c69bf510430'}\n\n```{.r .cell-code}\nlibrary(usemodels)\nuse_ranger(am ~ ., data = mtcars)\n## ranger_recipe <- \n##   recipe(formula = am ~ ., data = mtcars) \n## \n## ranger_spec <- \n##   rand_forest(mtry = tune(), min_n = tune(), trees = 1000) %>% \n##   set_mode(\"classification\") %>% \n##   set_engine(\"ranger\") \n## \n## ranger_workflow <- \n##   workflow() %>% \n##   add_recipe(ranger_recipe) %>% \n##   add_model(ranger_spec) \n## \n## set.seed(4113)\n## ranger_tune <-\n##   tune_grid(ranger_workflow, resamples = stop(\"add your rsample object\"), grid = stop(\"add number of candidate points\"))\n```\n:::\n\n\n\n\n\n### Blaupause: Code-Schnipsel für `tidymodels`\n\n\n\n\n\n::: {.cell hash='140-faden_cache/html/unnamed-chunk-4_e061213bc20cfa59451152e383d17b3a'}\n\n```{.r .cell-code}\n# Setup:\nlibrary(tidymodels)\nlibrary(tidyverse)\nlibrary(tictoc)  # Zeitmessung\nlibrary(<other_package_you_might_need_for_modelling>)  # tidymodels uses existing packages for modelling so you need to make them available\n\n\n# Data:\nd_path <- \"Enter data path here\"\nd <- read_csv(d_path)\n\nset.seed(42)\nd_split <- initial_split(d)\nd_train <- training(d_split)\nd_test <- testing(d_split)\n\n\n# model:\nmod1 <-\n  <enter_parsnip_model_name_here>(mode = \"<choose_regression_or_classification>\",\n           cost_complexity = tune())\n\n\n# cv:\nset.seed(42)\nrsmpl <- vfold_cv(d_train)\n\n\n# recipe:\nrec1 <- recipe(<enter_output_variable> ~  ., data = d_train)\n\n\n# workflow:\nwf1 <-\n  workflow() %>% \n  add_model(mod1) %>% \n  add_recipe(rec1)\n\n\n# tuning:\ntic()\nwf1_fit <-\n  wf1 %>% \n  tune_grid(\n    resamples = rsmpl)\ntoc()\n\n# best candidate:\nshow_best(wf1_fit)\n\n\n# finalize wf:\nwf1_final <-\n  wf1 %>% \n  finalize_workflow(select_best(wf1_fit))\n\n\nwf1_fit_final <-\n  wf1_final %>% \n  last_fit(d_split)\n\n\n# Modellgüte im Test-Set:\ncollect_metrics(wf1_fit_final)\n```\n:::\n\n\n\n\nTipp: Copy-Paste me 😄\n\n\nAuch [hier auf dem Datenwerk](https://datenwerk.netlify.app/posts/tidymodels-vorlage/tidymodels-vorlage.html) finden Sie ähnliche Vorlagen.\n\n\n\n\n\n##  Vertiefung\n\n- [Mathematische Grundlagen können Sie z.B. hier vertiefen](https://deisenroth.cc/publication/deisenroth-2020/)\n- [Gute Fallstudie bei Kaggle für Regressionsprobleme: House Prices](https://www.kaggle.com/competitions/house-prices-advanced-regression-techniques)\n- [Sie möchten schnell ein Code-Schnipsel (öffentlich sichtbar) teilen? Probieren Sie Github Gists aus](https://gist.github.com/)\n- If in doubt, scream and shout ... and ask [ChatGPT](https://chat.openai.com/auth/login): ChatGPT kann Ihnen Code-Schnipsel erstellen, wenn Sie ihn nach einer bestimmten Aufgabenstellung fragen.   \n\n\n\n\n\n\n\n\n\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<link href=\"site_libs/pagedtable-1.1/css/pagedtable.css\" rel=\"stylesheet\" />\n<script src=\"site_libs/pagedtable-1.1/js/pagedtable.js\"></script>\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}