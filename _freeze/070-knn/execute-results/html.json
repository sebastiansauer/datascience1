{
  "hash": "ebaa1a87093e027ab05cffa169e9b9d9",
  "result": {
    "markdown": "# kNN\n\n## Lernsteuerung\n\n\n\n\n### Überblick\n\nIn diesem Kapitel geht es um das Verfahren *KNN*, *K-Nächste-Nachbarn* ($k$ nearest neighbors).\n\n\n###  Lernziele\n\n- Sie sind in der Lage, einfache Klassifikationsmodelle zu spezifizieren mit tidymodels\n- Sie können den knn-Algorithmus erläutern\n- Sie können den knn-Algorithmus in tidymodels anwenden\n- Sie können die Gütemetriken von Klassifikationsmodellen einschätzen\n\n###  Literatur\n\n- Rhys, Kap. 3\n- [Timbers et al., Kap. 5](https://datasciencebook.ca/classification.html#classification)\n\n\n## Benötigte R-Pakete \n\n\n\n::: {.cell hash='070-knn_cache/html/unnamed-chunk-1_43b57f6c3f9d9fee6de0866dc8310308'}\n\n```{.r .cell-code}\nlibrary(tidymodels)\nlibrary(tidyverse)\n```\n:::\n\n::: {.cell hash='070-knn_cache/html/unnamed-chunk-2_800dcff536cedcb464338500000690f7'}\n\n:::\n\n\n\n\n## Intuitive Erklärung\n\n*K-Nächste-Nachbarn* ($k$ nearest neighbors, kNN) ist ein einfacher Algorithmus des maschinellen Lernens,\nder sowohl für Klassifikation als auch für numerische Vorhersage (Regression) genutzt werden kann.\nWir werden kNN als Beispiel für eine Klassifikation betrachten.\n\n\nBetrachen wir ein einführendes Beispiel von @rhys, für das es eine [Online-Quelle](https://livebook.manning.com/book/machine-learning-for-mortals-mere-and-otherwise/chapter-3/22) gibt.\nStellen Sie sich vor, wir laufen durch englische Landschaft,\nvielleicht die Grafschaft Kent, und sehen ein kleines Tier durch das Gras huschen.\nEine Schlange?!\nIn England gibt es (laut @rhys) nur eine giftige Schlange,\ndie Otter (Adder). \nEine andere Schlange, die *Grass Snake* ist nicht giftig,\nund dann kommt noch der *Slow Worm* in Frage,\nder gar nicht zur Familie der Schlangen gehört.\nPrimär interessiert uns die Frage, haben wir jetzt eine Otter gesehen?\nOder was für ein Tier war es?\n\nZum Glück wissen wir einiges über Schlangen bzw. schlangenähnliche Tiere Englands.\nNämlich können wir die betreffenden Tierarten in Größe und Aggressivität einschätzen,\ndas ist in Abbildung @fig-slang dargestellt.\n\n\n::: {.cell hash='070-knn_cache/html/fig-slang_f50eb9f651424a6e91117818cf31678c'}\n::: {.cell-output-display}\n![Haben wir gerade eine Otter gesehen?](img/rhys-fig3-2.jpeg){#fig-slang width=216}\n:::\n:::\n\n\nDer Algorithmus von kNN sieht einfach gesagt vor,\ndass wir schauen, welcher Tierarten Tiere mit ähnlicher Aggressivität und Größe angehören.\nDie Tierart die bei diesen \"Nachbarn\" hinsichtlich Ähnlichkeit relevanter Merkmale am häufigsten vertreten ist, ordnen wir die bisher unklassifizierte Beobachtung zu.\n\nEtwas zugespitzt:\n\n>   Wenn es quakt wie eine Ente 🦆, läuft wie eine Ente 🦆und aussieht wie eine Ente 🦆, dann ist es eine Ente 🦆.\n\n\nDie Anzahl $k$ der nächsten Nachbarn können wir frei wählen; \nder Wert wird *nicht* vom Algorithmuss bestimmt.\nSolche vom Nutzi zu bestimmenden Größen nennt man auch *Tuningparameter*.\n\n\n\n\n## Krebsdiagnostik 1\n\nBetrachten wir ein Beispiel von @timbers_data_2022,\ndas [hier](https://datasciencebook.ca/classification.html#classification-with-k-nearest-neighbors) frei eingesehen werden kann.\n\nDie Daten sind so zu beziehen:\n\n\n\n::: {.cell hash='070-knn_cache/html/unnamed-chunk-3_76ee1fb8dc8a07ecbc31fe57ecc471ea'}\n\n```{.r .cell-code}\ndata_url <- \"https://raw.githubusercontent.com/UBC-DSCI/introduction-to-datascience/master/data/wdbc.csv\"\ncancer <- read.csv(data_url)\n```\n:::\n\n\nIn diesem Beispiel versuchen wir Tumore der Brust zu klassifizieren,\nob sie einen schweren Verlauf (maligne, engl. malignant) oder einen weniger schweren Verlauf (benigne, engl. benign) erwarten lassen.\nDer Datensatz ist [hier](https://datasciencebook.ca/classification.html#describing-the-variables-in-the-cancer-data-set) näher erläutert.\n\n\nWie in  @fig-cancer1 ersichtlich,\nsteht eine Tumordiagnose (malignant vs. benign) in Abhängigkeit\nvon Umfang (engl. perimeter) und [Konkavität](https://de.wikipedia.org/wiki/Konvexe_und_konkave_Funktionen),\ndie \"Gekrümmtheit nach innen\".\n\n\n::: {.cell hash='070-knn_cache/html/fig-cancer1_dee115976d16a486ff13b53305f580f0'}\n::: {.cell-output-display}\n![Streudiagramm zur Einschätzung von Tumordiagnosen](070-knn_files/figure-html/fig-cancer1-1.png){#fig-cancer1 width=672}\n:::\n:::\n\n\nIn diesem Code-Beispiel wird die seit R 4.1.0 verfügbare R-native Pfeife verwendet. \nWichtig ist vielleicht vor allem, dass diese Funktion nicht läuft auf R-Versionen vor 4.1.0. \nEinige Unterschiede zur seit längerem bekannten Magrittr-Pfeife sind [hier](https://stackoverflow.com/questions/67633022/what-are-the-differences-between-rs-new-native-pipe-and-the-magrittr-pipe) erläutert.\n\nWichtig ist, dass die Merkmale standardisiert sind, also eine identische Skalierung aufweisen,\nda sonst das Merkmal mit kleinerer Skala weniger\nin die Berechnung der Nähe (bzw. Abstand) eingeht.\n\nFür einen neuen, bisher unklassifizierten Fall suchen nur nun nach einer Diagnose,\nalso nach der am besten passenden Diagnose (maligne oder benigne),\ns.  @fig-cancer2, wieder aus @timbers_data_2022.\nIhr Quellcode für dieses Diagramm (und das ganze Kapitel) findet sich [hier](https://github.com/UBC-DSCI/introduction-to-datascience/blob/master/classification1.Rmd).\n\n\n::: {.cell hash='070-knn_cache/html/fig-cancer2_eb5da99c71f99f1f4f1eb5c6f0f75f58'}\n::: {.cell-output-display}\n![Ein neuer Fall, bisher unklassifiziert](070-knn_files/figure-html/fig-cancer2-1.png){#fig-cancer2 width=672}\n:::\n:::\n\n\nWir können zunächst den (im euklidischen Koordinatensystem) nächst gelegenen Fall (der \"nächste Nachbar\") betrachten,\nund vereinbaren, \ndass wir dessen Klasse als Schätzwert für den unklassiffizierten Fall übernehmen,\ns.  @fig-cancer3.\n\n\n\n\n\n::: {.cell hash='070-knn_cache/html/cancer3_bcafcc8ff871eca5ba14a57be87b0d50'}\n\n:::\n\n\n\n![Ein nächster Nachbar](img/cancer3.png){#fig-cancer3}\n\nBetrachten wir einen anderen zu klassifizierenden Fall, s. @fig-cancer4.\nOb hier die Klassifikation von \"benign\" korrekt ist?\nWomöglich nicht, denn viele andere Nachbarn, \ndie etwas weiter weg gelegen sind, gehören zur anderen Diagnose, malign.\n\n\n\n::: {.cell hash='070-knn_cache/html/fig-cancer4_44726798c67171e8dcadecb6e5364356'}\n::: {.cell-output-display}\n![Trügt der nächste Nachbar?](https://datasciencebook.ca/_main_files/figure-html/05-knn-4-1.png){#fig-cancer4}\n:::\n:::\n\n\nUm die Vorhersage zu verbessern,\nkönnen wir nicht nur den nächstgelegenen Nachbarn betrachten,\nsondern die $k$ nächstgelegenen, z.B. $k=3$, s. Abb @fig-cancer5.\n\n\n\n::: {.cell hash='070-knn_cache/html/fig-cancer5_df1f029b9ef6ba903c1204b9b3be2d55'}\n::: {.cell-output-display}\n![kNN mit k=3](https://datasciencebook.ca/_main_files/figure-html/05-knn-5-1.png){#fig-cancer5}\n:::\n:::\n\n\n\nDie Entscheidungsregel ist dann einfach eine Mehrheitsentscheidung:\nWir klassifizieren den neuen Fall entsprechend der Mehrheit in den $k$ nächst gelegenen Nachbarn.\n\n\n## Berechnung der Nähe\n\n\nEs gibt verschiedenen Algorithmen,\num die Nähe bzw. Distanz der Nachbarn zum zu klassifizieren Fall zu berechnen.\n\nEine gebräuchliche Methode ist der *euklidische* Abstand,\nder mit Pythagoras berechnet werden kann, s.  @fig-pyth1 aus @modar.\n\n\n\n::: {.cell hash='070-knn_cache/html/fig-pyth1_2014ade9aebcbe9e5f03fa2a93af1d94'}\n::: {.cell-output-display}\n![Euklidischer Abstand wird mit der Regel von Pythagoras berechnet](img/distanz_crop.png){#fig-pyth1 width=391}\n:::\n:::\n\n\nWie war das noch mal?\n\n$$c^2 = a^2 + b^2$$\n\nIm Beispiel oben also:\n\n$c^2 = 3^2 + 4^2 = 5^2$\n\nDamit gilt: $c = \\sqrt{c^2} = \\sqrt{5^2}=5$.\n\n\nIm 2D-Raum ist das so einfach, dass man das (fast) mit bloßem Augenschein entscheiden kann.\nIn mehr als 2 Dimensionen wird es aber schwierig für das Auge, wie ein [Beispiel](https://datasciencebook.ca/classification.html#more-than-two-explanatory-variables) aus @timbers_data_2022 zeigt.\n\n\nAllerdings kann man den guten alten Pythagoras auch auf Dreiecke mit mehr als zwei Dimensionen anwenden, s.  @fig-pyth2 aus @modar, Kap. 21.1.2.\n\n\n\n\n:::{#fig-pyth2 layout-ncol=2}\n\n![Pythagoras mit mehr als zwei Dimensionen](img/pythagoras-crop.png){#fig-pyth2a}\n\n![Pythagoras mit mehr als zwei Dimensionen](img/pythagoras2-crop.png){#fig-pyth2b}\n\nPythagoras in der Ebene (links) und in 3D (rechts)\"\n\n:::\n\n\n\nBleiben wir beim Beispiel von Anna und Berta und nehmen wir eine dritte Variable \nhinzu (Statistikliebe). \nSagen wir, der Unterschied in dieser dritten Variable zwischen Anna und Berta betrage 2.\n\nEs gilt:\n\n$$\n\\begin{aligned}\ne^2 &= c^2 + d^2 \\\\\ne^2 &= 5^2 + 2^2 \\\\\ne^2 &= 25 + 4\\\\\ne &= \\sqrt{29} \\approx 5.4\n\\end{aligned}\n$$\n\n\n\n\n\n## kNN mit Tidymodels\n\n\n\n\n### Analog zu Timbers et al.\n\nEine Anwendung von kNN mit Tidymodels ist in @timbers_data_2022, Kap. 5.6, [hier](https://datasciencebook.ca/classification.html#k-nearest-neighbors-with-tidymodels) beschrieben.\n\n\nDie Daten aus @timbers_data_2022 finden sich [in diesem Github-Repo](https://github.com/UBC-DSCI/introduction-to-datascience/tree/master/data)-\n\nDie (z-transformierten) Daten zur Tumorklassifikation können [hier](https://raw.githubusercontent.com/UBC-DSCI/data-science-a-first-intro-worksheets/main/worksheet_classification1/data/clean-wdbc-data.csv) bezogen werden.\n\n\n\n::: {.cell hash='070-knn_cache/html/unnamed-chunk-5_a9c8405ea94f131ac00afa09370e9168'}\n\n```{.r .cell-code}\ndata_url <- \"https://raw.githubusercontent.com/UBC-DSCI/introduction-to-datascience/master/data/wdbc.csv\"\ncancer <- read_csv(data_url)\n```\n:::\n\n\n@timbers_data_2022 verwenden in Kap. 5 auch noch nicht standardisierte Daten, `unscales_wdbc.csv`, die [hier](https://raw.githubusercontent.com/UBC-DSCI/introduction-to-datascience/master/data/unscaled_wdbc.csv) als CSV-Datei heruntergeladen werden können.\n\n\n\n::: {.cell hash='070-knn_cache/html/unnamed-chunk-6_ae4da127360c477c58b18fb76487671e'}\n\n```{.r .cell-code}\ncancer_unscales_path <- \"https://raw.githubusercontent.com/UBC-DSCI/introduction-to-datascience/master/data/unscaled_wdbc.csv\"\n\nunscaled_cancer <- read_csv(cancer_unscales_path) |>\n  mutate(Class = as_factor(Class)) |>\n  select(Class, Area, Smoothness)\nunscaled_cancer\n```\n\n::: {.cell-output-display}\n`````{=html}\n<div data-pagedtable=\"false\">\n  <script data-pagedtable-source type=\"application/json\">\n{\"columns\":[{\"label\":[\"Class\"],\"name\":[1],\"type\":[\"fct\"],\"align\":[\"left\"]},{\"label\":[\"Area\"],\"name\":[2],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"Smoothness\"],\"name\":[3],\"type\":[\"dbl\"],\"align\":[\"right\"]}],\"data\":[{\"1\":\"M\",\"2\":\"1001.0\",\"3\":\"0.11840\"},{\"1\":\"M\",\"2\":\"1326.0\",\"3\":\"0.08474\"},{\"1\":\"M\",\"2\":\"1203.0\",\"3\":\"0.10960\"},{\"1\":\"M\",\"2\":\"386.1\",\"3\":\"0.14250\"},{\"1\":\"M\",\"2\":\"1297.0\",\"3\":\"0.10030\"},{\"1\":\"M\",\"2\":\"477.1\",\"3\":\"0.12780\"},{\"1\":\"M\",\"2\":\"1040.0\",\"3\":\"0.09463\"},{\"1\":\"M\",\"2\":\"577.9\",\"3\":\"0.11890\"},{\"1\":\"M\",\"2\":\"519.8\",\"3\":\"0.12730\"},{\"1\":\"M\",\"2\":\"475.9\",\"3\":\"0.11860\"},{\"1\":\"M\",\"2\":\"797.8\",\"3\":\"0.08206\"},{\"1\":\"M\",\"2\":\"781.0\",\"3\":\"0.09710\"},{\"1\":\"M\",\"2\":\"1123.0\",\"3\":\"0.09740\"},{\"1\":\"M\",\"2\":\"782.7\",\"3\":\"0.08401\"},{\"1\":\"M\",\"2\":\"578.3\",\"3\":\"0.11310\"},{\"1\":\"M\",\"2\":\"658.8\",\"3\":\"0.11390\"},{\"1\":\"M\",\"2\":\"684.5\",\"3\":\"0.09867\"},{\"1\":\"M\",\"2\":\"798.8\",\"3\":\"0.11700\"},{\"1\":\"M\",\"2\":\"1260.0\",\"3\":\"0.09831\"},{\"1\":\"B\",\"2\":\"566.3\",\"3\":\"0.09779\"},{\"1\":\"B\",\"2\":\"520.0\",\"3\":\"0.10750\"},{\"1\":\"B\",\"2\":\"273.9\",\"3\":\"0.10240\"},{\"1\":\"M\",\"2\":\"704.4\",\"3\":\"0.10730\"},{\"1\":\"M\",\"2\":\"1404.0\",\"3\":\"0.09428\"},{\"1\":\"M\",\"2\":\"904.6\",\"3\":\"0.11210\"},{\"1\":\"M\",\"2\":\"912.7\",\"3\":\"0.11860\"},{\"1\":\"M\",\"2\":\"644.8\",\"3\":\"0.10540\"},{\"1\":\"M\",\"2\":\"1094.0\",\"3\":\"0.09440\"},{\"1\":\"M\",\"2\":\"732.4\",\"3\":\"0.10820\"},{\"1\":\"M\",\"2\":\"955.1\",\"3\":\"0.09847\"},{\"1\":\"M\",\"2\":\"1088.0\",\"3\":\"0.10640\"},{\"1\":\"M\",\"2\":\"440.6\",\"3\":\"0.11090\"},{\"1\":\"M\",\"2\":\"899.3\",\"3\":\"0.11970\"},{\"1\":\"M\",\"2\":\"1162.0\",\"3\":\"0.09401\"},{\"1\":\"M\",\"2\":\"807.2\",\"3\":\"0.10400\"},{\"1\":\"M\",\"2\":\"869.5\",\"3\":\"0.09610\"},{\"1\":\"M\",\"2\":\"633.0\",\"3\":\"0.09823\"},{\"1\":\"B\",\"2\":\"523.8\",\"3\":\"0.08983\"},{\"1\":\"M\",\"2\":\"698.8\",\"3\":\"0.09387\"},{\"1\":\"M\",\"2\":\"559.2\",\"3\":\"0.10160\"},{\"1\":\"M\",\"2\":\"563.0\",\"3\":\"0.08162\"},{\"1\":\"M\",\"2\":\"371.1\",\"3\":\"0.12270\"},{\"1\":\"M\",\"2\":\"1104.0\",\"3\":\"0.09081\"},{\"1\":\"M\",\"2\":\"545.2\",\"3\":\"0.10410\"},{\"1\":\"M\",\"2\":\"531.5\",\"3\":\"0.09714\"},{\"1\":\"M\",\"2\":\"1076.0\",\"3\":\"0.10990\"},{\"1\":\"B\",\"2\":\"201.9\",\"3\":\"0.08600\"},{\"1\":\"M\",\"2\":\"534.6\",\"3\":\"0.11580\"},{\"1\":\"B\",\"2\":\"449.3\",\"3\":\"0.10310\"},{\"1\":\"B\",\"2\":\"561.0\",\"3\":\"0.08752\"},{\"1\":\"B\",\"2\":\"427.9\",\"3\":\"0.08637\"},{\"1\":\"B\",\"2\":\"571.8\",\"3\":\"0.07685\"},{\"1\":\"B\",\"2\":\"437.6\",\"3\":\"0.08261\"},{\"1\":\"M\",\"2\":\"1033.0\",\"3\":\"0.11480\"},{\"1\":\"M\",\"2\":\"712.8\",\"3\":\"0.09056\"},{\"1\":\"B\",\"2\":\"409.0\",\"3\":\"0.09524\"},{\"1\":\"M\",\"2\":\"1152.0\",\"3\":\"0.10530\"},{\"1\":\"M\",\"2\":\"656.9\",\"3\":\"0.11370\"},{\"1\":\"B\",\"2\":\"527.2\",\"3\":\"0.08060\"},{\"1\":\"B\",\"2\":\"224.5\",\"3\":\"0.09752\"},{\"1\":\"B\",\"2\":\"311.9\",\"3\":\"0.11340\"},{\"1\":\"B\",\"2\":\"221.8\",\"3\":\"0.12430\"},{\"1\":\"M\",\"2\":\"645.7\",\"3\":\"0.10490\"},{\"1\":\"B\",\"2\":\"260.9\",\"3\":\"0.07721\"},{\"1\":\"M\",\"2\":\"499.0\",\"3\":\"0.11220\"},{\"1\":\"M\",\"2\":\"668.3\",\"3\":\"0.11720\"},{\"1\":\"B\",\"2\":\"269.4\",\"3\":\"0.10440\"},{\"1\":\"B\",\"2\":\"394.1\",\"3\":\"0.08139\"},{\"1\":\"B\",\"2\":\"250.5\",\"3\":\"0.10660\"},{\"1\":\"B\",\"2\":\"502.5\",\"3\":\"0.09831\"},{\"1\":\"M\",\"2\":\"1130.0\",\"3\":\"0.09009\"},{\"1\":\"B\",\"2\":\"244.0\",\"3\":\"0.09783\"},{\"1\":\"M\",\"2\":\"929.4\",\"3\":\"0.10710\"},{\"1\":\"M\",\"2\":\"584.1\",\"3\":\"0.10070\"},{\"1\":\"B\",\"2\":\"470.9\",\"3\":\"0.09172\"},{\"1\":\"M\",\"2\":\"817.7\",\"3\":\"0.09168\"},{\"1\":\"B\",\"2\":\"559.2\",\"3\":\"0.12910\"},{\"1\":\"M\",\"2\":\"1006.0\",\"3\":\"0.10650\"},{\"1\":\"M\",\"2\":\"1245.0\",\"3\":\"0.12860\"},{\"1\":\"B\",\"2\":\"506.3\",\"3\":\"0.09934\"},{\"1\":\"B\",\"2\":\"401.5\",\"3\":\"0.11020\"},{\"1\":\"B\",\"2\":\"520.0\",\"3\":\"0.10780\"},{\"1\":\"M\",\"2\":\"1878.0\",\"3\":\"0.10630\"},{\"1\":\"M\",\"2\":\"1132.0\",\"3\":\"0.12150\"},{\"1\":\"B\",\"2\":\"443.3\",\"3\":\"0.09723\"},{\"1\":\"M\",\"2\":\"1075.0\",\"3\":\"0.09874\"},{\"1\":\"M\",\"2\":\"648.2\",\"3\":\"0.09444\"},{\"1\":\"M\",\"2\":\"1076.0\",\"3\":\"0.09029\"},{\"1\":\"B\",\"2\":\"466.1\",\"3\":\"0.08772\"},{\"1\":\"B\",\"2\":\"651.9\",\"3\":\"0.11320\"},{\"1\":\"B\",\"2\":\"662.7\",\"3\":\"0.08974\"},{\"1\":\"M\",\"2\":\"728.2\",\"3\":\"0.09200\"},{\"1\":\"B\",\"2\":\"551.7\",\"3\":\"0.07355\"},{\"1\":\"B\",\"2\":\"555.1\",\"3\":\"0.10220\"},{\"1\":\"M\",\"2\":\"705.6\",\"3\":\"0.10390\"},{\"1\":\"M\",\"2\":\"1264.0\",\"3\":\"0.09078\"},{\"1\":\"B\",\"2\":\"451.1\",\"3\":\"0.10450\"},{\"1\":\"B\",\"2\":\"294.5\",\"3\":\"0.10240\"},{\"1\":\"B\",\"2\":\"412.6\",\"3\":\"0.08983\"},{\"1\":\"M\",\"2\":\"642.5\",\"3\":\"0.09752\"},{\"1\":\"M\",\"2\":\"582.7\",\"3\":\"0.09488\"},{\"1\":\"B\",\"2\":\"143.5\",\"3\":\"0.11700\"},{\"1\":\"B\",\"2\":\"458.7\",\"3\":\"0.08013\"},{\"1\":\"B\",\"2\":\"298.3\",\"3\":\"0.10050\"},{\"1\":\"B\",\"2\":\"336.1\",\"3\":\"0.09989\"},{\"1\":\"M\",\"2\":\"530.2\",\"3\":\"0.13980\"},{\"1\":\"B\",\"2\":\"412.5\",\"3\":\"0.11420\"},{\"1\":\"B\",\"2\":\"466.7\",\"3\":\"0.08477\"},{\"1\":\"M\",\"2\":\"1509.0\",\"3\":\"0.13260\"},{\"1\":\"B\",\"2\":\"396.5\",\"3\":\"0.08759\"},{\"1\":\"B\",\"2\":\"290.2\",\"3\":\"0.10370\"},{\"1\":\"B\",\"2\":\"480.4\",\"3\":\"0.09933\"},{\"1\":\"B\",\"2\":\"629.9\",\"3\":\"0.07837\"},{\"1\":\"B\",\"2\":\"334.2\",\"3\":\"0.11220\"},{\"1\":\"B\",\"2\":\"230.9\",\"3\":\"0.11500\"},{\"1\":\"B\",\"2\":\"438.6\",\"3\":\"0.09768\"},{\"1\":\"B\",\"2\":\"245.2\",\"3\":\"0.09462\"},{\"1\":\"M\",\"2\":\"682.5\",\"3\":\"0.11620\"},{\"1\":\"M\",\"2\":\"782.6\",\"3\":\"0.11550\"},{\"1\":\"M\",\"2\":\"982.0\",\"3\":\"0.08402\"},{\"1\":\"B\",\"2\":\"403.3\",\"3\":\"0.09373\"},{\"1\":\"M\",\"2\":\"1077.0\",\"3\":\"0.10540\"},{\"1\":\"M\",\"2\":\"1761.0\",\"3\":\"0.14470\"},{\"1\":\"B\",\"2\":\"640.7\",\"3\":\"0.11010\"},{\"1\":\"B\",\"2\":\"553.5\",\"3\":\"0.07115\"},{\"1\":\"B\",\"2\":\"588.7\",\"3\":\"0.08785\"},{\"1\":\"M\",\"2\":\"572.6\",\"3\":\"0.09258\"},{\"1\":\"M\",\"2\":\"1138.0\",\"3\":\"0.08217\"},{\"1\":\"B\",\"2\":\"674.5\",\"3\":\"0.11500\"},{\"1\":\"M\",\"2\":\"1192.0\",\"3\":\"0.10150\"},{\"1\":\"B\",\"2\":\"455.8\",\"3\":\"0.10660\"},{\"1\":\"M\",\"2\":\"748.9\",\"3\":\"0.10920\"},{\"1\":\"M\",\"2\":\"809.8\",\"3\":\"0.10080\"},{\"1\":\"B\",\"2\":\"761.7\",\"3\":\"0.09462\"},{\"1\":\"M\",\"2\":\"1075.0\",\"3\":\"0.09430\"},{\"1\":\"M\",\"2\":\"506.3\",\"3\":\"0.09055\"},{\"1\":\"B\",\"2\":\"423.6\",\"3\":\"0.10510\"},{\"1\":\"B\",\"2\":\"399.8\",\"3\":\"0.09639\"},{\"1\":\"M\",\"2\":\"678.1\",\"3\":\"0.11670\"},{\"1\":\"B\",\"2\":\"384.8\",\"3\":\"0.11640\"},{\"1\":\"B\",\"2\":\"288.5\",\"3\":\"0.09250\"},{\"1\":\"M\",\"2\":\"813.0\",\"3\":\"0.09721\"},{\"1\":\"B\",\"2\":\"398.0\",\"3\":\"0.10920\"},{\"1\":\"B\",\"2\":\"512.2\",\"3\":\"0.08677\"},{\"1\":\"B\",\"2\":\"355.3\",\"3\":\"0.07793\"},{\"1\":\"B\",\"2\":\"432.8\",\"3\":\"0.11520\"},{\"1\":\"M\",\"2\":\"432.0\",\"3\":\"0.10910\"},{\"1\":\"B\",\"2\":\"689.5\",\"3\":\"0.08138\"},{\"1\":\"B\",\"2\":\"640.1\",\"3\":\"0.09970\"},{\"1\":\"B\",\"2\":\"585.0\",\"3\":\"0.07944\"},{\"1\":\"B\",\"2\":\"519.4\",\"3\":\"0.11350\"},{\"1\":\"B\",\"2\":\"203.9\",\"3\":\"0.09405\"},{\"1\":\"B\",\"2\":\"300.2\",\"3\":\"0.10720\"},{\"1\":\"B\",\"2\":\"381.9\",\"3\":\"0.09754\"},{\"1\":\"B\",\"2\":\"538.9\",\"3\":\"0.09384\"},{\"1\":\"B\",\"2\":\"460.3\",\"3\":\"0.08654\"},{\"1\":\"M\",\"2\":\"963.7\",\"3\":\"0.11150\"},{\"1\":\"B\",\"2\":\"880.2\",\"3\":\"0.07445\"},{\"1\":\"B\",\"2\":\"448.6\",\"3\":\"0.09311\"},{\"1\":\"B\",\"2\":\"366.8\",\"3\":\"0.07515\"},{\"1\":\"B\",\"2\":\"419.8\",\"3\":\"0.10890\"},{\"1\":\"M\",\"2\":\"1157.0\",\"3\":\"0.08694\"},{\"1\":\"M\",\"2\":\"1214.0\",\"3\":\"0.11200\"},{\"1\":\"B\",\"2\":\"464.5\",\"3\":\"0.10120\"},{\"1\":\"M\",\"2\":\"1686.0\",\"3\":\"0.08439\"},{\"1\":\"B\",\"2\":\"690.2\",\"3\":\"0.08421\"},{\"1\":\"B\",\"2\":\"357.6\",\"3\":\"0.09594\"},{\"1\":\"M\",\"2\":\"886.3\",\"3\":\"0.08865\"},{\"1\":\"M\",\"2\":\"984.6\",\"3\":\"0.10490\"},{\"1\":\"B\",\"2\":\"685.9\",\"3\":\"0.09855\"},{\"1\":\"B\",\"2\":\"464.1\",\"3\":\"0.10280\"},{\"1\":\"M\",\"2\":\"565.4\",\"3\":\"0.09048\"},{\"1\":\"M\",\"2\":\"736.9\",\"3\":\"0.12570\"},{\"1\":\"B\",\"2\":\"372.7\",\"3\":\"0.10060\"},{\"1\":\"B\",\"2\":\"349.6\",\"3\":\"0.08792\"},{\"1\":\"B\",\"2\":\"227.2\",\"3\":\"0.09138\"},{\"1\":\"B\",\"2\":\"302.4\",\"3\":\"0.09699\"},{\"1\":\"M\",\"2\":\"832.9\",\"3\":\"0.09831\"},{\"1\":\"B\",\"2\":\"526.4\",\"3\":\"0.06251\"},{\"1\":\"B\",\"2\":\"508.8\",\"3\":\"0.08739\"},{\"1\":\"M\",\"2\":\"2250.0\",\"3\":\"0.10940\"},{\"1\":\"M\",\"2\":\"1311.0\",\"3\":\"0.11410\"},{\"1\":\"M\",\"2\":\"766.6\",\"3\":\"0.09597\"},{\"1\":\"B\",\"2\":\"402.0\",\"3\":\"0.09059\"},{\"1\":\"M\",\"2\":\"710.6\",\"3\":\"0.09057\"},{\"1\":\"B\",\"2\":\"317.5\",\"3\":\"0.09267\"},{\"1\":\"M\",\"2\":\"1041.0\",\"3\":\"0.08588\"},{\"1\":\"B\",\"2\":\"420.3\",\"3\":\"0.09774\"},{\"1\":\"B\",\"2\":\"428.9\",\"3\":\"0.10070\"},{\"1\":\"B\",\"2\":\"463.7\",\"3\":\"0.08080\"},{\"1\":\"M\",\"2\":\"609.9\",\"3\":\"0.10750\"},{\"1\":\"B\",\"2\":\"507.4\",\"3\":\"0.08749\"},{\"1\":\"B\",\"2\":\"288.1\",\"3\":\"0.06950\"},{\"1\":\"M\",\"2\":\"477.4\",\"3\":\"0.10340\"},{\"1\":\"M\",\"2\":\"671.4\",\"3\":\"0.10440\"},{\"1\":\"B\",\"2\":\"516.4\",\"3\":\"0.07941\"},{\"1\":\"M\",\"2\":\"588.9\",\"3\":\"0.12000\"},{\"1\":\"M\",\"2\":\"1024.0\",\"3\":\"0.07371\"},{\"1\":\"M\",\"2\":\"1148.0\",\"3\":\"0.08523\"},{\"1\":\"M\",\"2\":\"642.7\",\"3\":\"0.09872\"},{\"1\":\"B\",\"2\":\"461.0\",\"3\":\"0.09586\"},{\"1\":\"M\",\"2\":\"951.6\",\"3\":\"0.08968\"},{\"1\":\"M\",\"2\":\"1685.0\",\"3\":\"0.11410\"},{\"1\":\"M\",\"2\":\"597.8\",\"3\":\"0.13230\"},{\"1\":\"B\",\"2\":\"481.9\",\"3\":\"0.09965\"},{\"1\":\"M\",\"2\":\"716.6\",\"3\":\"0.08876\"},{\"1\":\"B\",\"2\":\"295.4\",\"3\":\"0.10890\"},{\"1\":\"M\",\"2\":\"904.3\",\"3\":\"0.08772\"},{\"1\":\"B\",\"2\":\"529.4\",\"3\":\"0.10020\"},{\"1\":\"B\",\"2\":\"725.5\",\"3\":\"0.08182\"},{\"1\":\"M\",\"2\":\"1290.0\",\"3\":\"0.09090\"},{\"1\":\"B\",\"2\":\"428.0\",\"3\":\"0.08871\"},{\"1\":\"M\",\"2\":\"2499.0\",\"3\":\"0.11420\"},{\"1\":\"M\",\"2\":\"948.0\",\"3\":\"0.10060\"},{\"1\":\"M\",\"2\":\"610.7\",\"3\":\"0.09463\"},{\"1\":\"M\",\"2\":\"578.9\",\"3\":\"0.10260\"},{\"1\":\"B\",\"2\":\"432.2\",\"3\":\"0.09363\"},{\"1\":\"B\",\"2\":\"321.2\",\"3\":\"0.08054\"},{\"1\":\"M\",\"2\":\"1230.0\",\"3\":\"0.09383\"},{\"1\":\"M\",\"2\":\"1223.0\",\"3\":\"0.08420\"},{\"1\":\"B\",\"2\":\"568.9\",\"3\":\"0.09646\"},{\"1\":\"B\",\"2\":\"561.3\",\"3\":\"0.10510\"},{\"1\":\"B\",\"2\":\"313.1\",\"3\":\"0.10610\"},{\"1\":\"M\",\"2\":\"761.3\",\"3\":\"0.10250\"},{\"1\":\"B\",\"2\":\"546.4\",\"3\":\"0.08445\"},{\"1\":\"B\",\"2\":\"641.2\",\"3\":\"0.09906\"},{\"1\":\"B\",\"2\":\"329.6\",\"3\":\"0.10530\"},{\"1\":\"B\",\"2\":\"684.5\",\"3\":\"0.08371\"},{\"1\":\"B\",\"2\":\"496.4\",\"3\":\"0.07903\"},{\"1\":\"M\",\"2\":\"503.2\",\"3\":\"0.10880\"},{\"1\":\"M\",\"2\":\"895.0\",\"3\":\"0.11410\"},{\"1\":\"B\",\"2\":\"395.7\",\"3\":\"0.06883\"},{\"1\":\"B\",\"2\":\"386.8\",\"3\":\"0.07780\"},{\"1\":\"M\",\"2\":\"1319.0\",\"3\":\"0.09159\"},{\"1\":\"B\",\"2\":\"279.6\",\"3\":\"0.08464\"},{\"1\":\"B\",\"2\":\"603.4\",\"3\":\"0.09070\"},{\"1\":\"M\",\"2\":\"1670.0\",\"3\":\"0.09509\"},{\"1\":\"M\",\"2\":\"1306.0\",\"3\":\"0.08355\"},{\"1\":\"B\",\"2\":\"623.9\",\"3\":\"0.08223\"},{\"1\":\"M\",\"2\":\"920.6\",\"3\":\"0.09812\"},{\"1\":\"B\",\"2\":\"575.3\",\"3\":\"0.09423\"},{\"1\":\"B\",\"2\":\"476.5\",\"3\":\"0.07926\"},{\"1\":\"B\",\"2\":\"389.4\",\"3\":\"0.09592\"},{\"1\":\"B\",\"2\":\"590.0\",\"3\":\"0.08043\"},{\"1\":\"M\",\"2\":\"1155.0\",\"3\":\"0.10270\"},{\"1\":\"B\",\"2\":\"337.7\",\"3\":\"0.10700\"},{\"1\":\"B\",\"2\":\"541.6\",\"3\":\"0.07215\"},{\"1\":\"B\",\"2\":\"512.2\",\"3\":\"0.08760\"},{\"1\":\"B\",\"2\":\"347.0\",\"3\":\"0.09657\"},{\"1\":\"B\",\"2\":\"406.3\",\"3\":\"0.10130\"},{\"1\":\"M\",\"2\":\"1364.0\",\"3\":\"0.10070\"},{\"1\":\"B\",\"2\":\"407.4\",\"3\":\"0.09345\"},{\"1\":\"M\",\"2\":\"1206.0\",\"3\":\"0.10620\"},{\"1\":\"M\",\"2\":\"928.2\",\"3\":\"0.10080\"},{\"1\":\"M\",\"2\":\"1169.0\",\"3\":\"0.10350\"},{\"1\":\"M\",\"2\":\"602.4\",\"3\":\"0.10960\"},{\"1\":\"M\",\"2\":\"1207.0\",\"3\":\"0.09260\"},{\"1\":\"M\",\"2\":\"713.3\",\"3\":\"0.13350\"},{\"1\":\"M\",\"2\":\"773.5\",\"3\":\"0.11090\"},{\"1\":\"M\",\"2\":\"744.9\",\"3\":\"0.10630\"},{\"1\":\"M\",\"2\":\"1288.0\",\"3\":\"0.10000\"},{\"1\":\"M\",\"2\":\"933.1\",\"3\":\"0.08662\"},{\"1\":\"M\",\"2\":\"947.8\",\"3\":\"0.08999\"},{\"1\":\"M\",\"2\":\"758.6\",\"3\":\"0.07840\"},{\"1\":\"M\",\"2\":\"928.3\",\"3\":\"0.09726\"},{\"1\":\"M\",\"2\":\"1419.0\",\"3\":\"0.09469\"},{\"1\":\"B\",\"2\":\"346.4\",\"3\":\"0.09688\"},{\"1\":\"B\",\"2\":\"561.0\",\"3\":\"0.07956\"},{\"1\":\"B\",\"2\":\"512.2\",\"3\":\"0.09425\"},{\"1\":\"B\",\"2\":\"344.9\",\"3\":\"0.10820\"},{\"1\":\"B\",\"2\":\"632.6\",\"3\":\"0.06429\"},{\"1\":\"B\",\"2\":\"388.0\",\"3\":\"0.09834\"},{\"1\":\"M\",\"2\":\"1491.0\",\"3\":\"0.09401\"},{\"1\":\"B\",\"2\":\"289.9\",\"3\":\"0.09037\"},{\"1\":\"M\",\"2\":\"998.9\",\"3\":\"0.08855\"},{\"1\":\"B\",\"2\":\"435.6\",\"3\":\"0.12250\"},{\"1\":\"B\",\"2\":\"396.6\",\"3\":\"0.09379\"},{\"1\":\"M\",\"2\":\"1102.0\",\"3\":\"0.08923\"},{\"1\":\"B\",\"2\":\"572.3\",\"3\":\"0.07948\"},{\"1\":\"B\",\"2\":\"587.4\",\"3\":\"0.09516\"},{\"1\":\"M\",\"2\":\"1138.0\",\"3\":\"0.10200\"},{\"1\":\"B\",\"2\":\"427.3\",\"3\":\"0.07813\"},{\"1\":\"M\",\"2\":\"1145.0\",\"3\":\"0.10370\"},{\"1\":\"M\",\"2\":\"805.1\",\"3\":\"0.10660\"},{\"1\":\"B\",\"2\":\"516.6\",\"3\":\"0.07818\"},{\"1\":\"B\",\"2\":\"489.0\",\"3\":\"0.08393\"},{\"1\":\"B\",\"2\":\"441.0\",\"3\":\"0.08605\"},{\"1\":\"B\",\"2\":\"515.9\",\"3\":\"0.06955\"},{\"1\":\"B\",\"2\":\"394.1\",\"3\":\"0.08020\"},{\"1\":\"B\",\"2\":\"396.0\",\"3\":\"0.08713\"},{\"1\":\"B\",\"2\":\"651.0\",\"3\":\"0.08757\"},{\"1\":\"B\",\"2\":\"687.3\",\"3\":\"0.08992\"},{\"1\":\"B\",\"2\":\"513.7\",\"3\":\"0.10050\"},{\"1\":\"B\",\"2\":\"432.7\",\"3\":\"0.08372\"},{\"1\":\"B\",\"2\":\"492.1\",\"3\":\"0.09667\"},{\"1\":\"B\",\"2\":\"582.7\",\"3\":\"0.09198\"},{\"1\":\"B\",\"2\":\"363.7\",\"3\":\"0.08518\"},{\"1\":\"M\",\"2\":\"431.1\",\"3\":\"0.09968\"},{\"1\":\"B\",\"2\":\"633.1\",\"3\":\"0.06576\"},{\"1\":\"B\",\"2\":\"334.2\",\"3\":\"0.10150\"},{\"1\":\"M\",\"2\":\"1217.0\",\"3\":\"0.11500\"},{\"1\":\"B\",\"2\":\"471.3\",\"3\":\"0.08451\"},{\"1\":\"M\",\"2\":\"1247.0\",\"3\":\"0.10800\"},{\"1\":\"B\",\"2\":\"334.3\",\"3\":\"0.10680\"},{\"1\":\"B\",\"2\":\"403.1\",\"3\":\"0.08853\"},{\"1\":\"B\",\"2\":\"417.2\",\"3\":\"0.07474\"},{\"1\":\"B\",\"2\":\"537.3\",\"3\":\"0.08511\"},{\"1\":\"B\",\"2\":\"246.3\",\"3\":\"0.07005\"},{\"1\":\"B\",\"2\":\"566.2\",\"3\":\"0.07376\"},{\"1\":\"B\",\"2\":\"530.6\",\"3\":\"0.08352\"},{\"1\":\"B\",\"2\":\"418.7\",\"3\":\"0.08814\"},{\"1\":\"B\",\"2\":\"664.9\",\"3\":\"0.07618\"},{\"1\":\"B\",\"2\":\"504.1\",\"3\":\"0.08794\"},{\"1\":\"B\",\"2\":\"409.1\",\"3\":\"0.08597\"},{\"1\":\"B\",\"2\":\"221.2\",\"3\":\"0.10740\"},{\"1\":\"B\",\"2\":\"481.6\",\"3\":\"0.08511\"},{\"1\":\"B\",\"2\":\"461.4\",\"3\":\"0.07734\"},{\"1\":\"M\",\"2\":\"1027.0\",\"3\":\"0.09746\"},{\"1\":\"B\",\"2\":\"244.5\",\"3\":\"0.09968\"},{\"1\":\"B\",\"2\":\"477.3\",\"3\":\"0.07557\"},{\"1\":\"B\",\"2\":\"324.2\",\"3\":\"0.10610\"},{\"1\":\"M\",\"2\":\"1274.0\",\"3\":\"0.08020\"},{\"1\":\"B\",\"2\":\"504.8\",\"3\":\"0.11340\"},{\"1\":\"M\",\"2\":\"1264.0\",\"3\":\"0.11700\"},{\"1\":\"B\",\"2\":\"457.9\",\"3\":\"0.08673\"},{\"1\":\"B\",\"2\":\"489.9\",\"3\":\"0.10280\"},{\"1\":\"B\",\"2\":\"616.5\",\"3\":\"0.09309\"},{\"1\":\"B\",\"2\":\"446.0\",\"3\":\"0.07683\"},{\"1\":\"M\",\"2\":\"813.7\",\"3\":\"0.11690\"},{\"1\":\"M\",\"2\":\"826.8\",\"3\":\"0.11650\"},{\"1\":\"M\",\"2\":\"793.2\",\"3\":\"0.09491\"},{\"1\":\"B\",\"2\":\"514.0\",\"3\":\"0.09579\"},{\"1\":\"B\",\"2\":\"387.3\",\"3\":\"0.10540\"},{\"1\":\"B\",\"2\":\"390.0\",\"3\":\"0.08306\"},{\"1\":\"B\",\"2\":\"464.4\",\"3\":\"0.08313\"},{\"1\":\"M\",\"2\":\"918.6\",\"3\":\"0.11190\"},{\"1\":\"B\",\"2\":\"514.3\",\"3\":\"0.09462\"},{\"1\":\"M\",\"2\":\"1092.0\",\"3\":\"0.09116\"},{\"1\":\"B\",\"2\":\"310.8\",\"3\":\"0.10070\"},{\"1\":\"M\",\"2\":\"1747.0\",\"3\":\"0.10690\"},{\"1\":\"B\",\"2\":\"641.2\",\"3\":\"0.09751\"},{\"1\":\"B\",\"2\":\"280.5\",\"3\":\"0.08481\"},{\"1\":\"B\",\"2\":\"373.9\",\"3\":\"0.10330\"},{\"1\":\"M\",\"2\":\"1194.0\",\"3\":\"0.09797\"},{\"1\":\"B\",\"2\":\"420.3\",\"3\":\"0.11500\"},{\"1\":\"B\",\"2\":\"321.6\",\"3\":\"0.09882\"},{\"1\":\"B\",\"2\":\"445.3\",\"3\":\"0.08386\"},{\"1\":\"B\",\"2\":\"668.7\",\"3\":\"0.08875\"},{\"1\":\"B\",\"2\":\"402.7\",\"3\":\"0.09076\"},{\"1\":\"B\",\"2\":\"426.7\",\"3\":\"0.11580\"},{\"1\":\"B\",\"2\":\"421.0\",\"3\":\"0.07561\"},{\"1\":\"M\",\"2\":\"758.6\",\"3\":\"0.12430\"},{\"1\":\"M\",\"2\":\"2010.0\",\"3\":\"0.11490\"},{\"1\":\"M\",\"2\":\"716.6\",\"3\":\"0.10240\"},{\"1\":\"B\",\"2\":\"384.6\",\"3\":\"0.07274\"},{\"1\":\"B\",\"2\":\"485.8\",\"3\":\"0.08760\"},{\"1\":\"B\",\"2\":\"512.0\",\"3\":\"0.10820\"},{\"1\":\"B\",\"2\":\"593.7\",\"3\":\"0.08743\"},{\"1\":\"B\",\"2\":\"241.0\",\"3\":\"0.08293\"},{\"1\":\"B\",\"2\":\"278.6\",\"3\":\"0.10090\"},{\"1\":\"B\",\"2\":\"491.9\",\"3\":\"0.07436\"},{\"1\":\"B\",\"2\":\"546.1\",\"3\":\"0.08582\"},{\"1\":\"B\",\"2\":\"496.6\",\"3\":\"0.09676\"},{\"1\":\"B\",\"2\":\"838.1\",\"3\":\"0.09686\"},{\"1\":\"B\",\"2\":\"552.4\",\"3\":\"0.07937\"},{\"1\":\"M\",\"2\":\"1293.0\",\"3\":\"0.09150\"},{\"1\":\"M\",\"2\":\"1234.0\",\"3\":\"0.09905\"},{\"1\":\"B\",\"2\":\"458.4\",\"3\":\"0.09231\"},{\"1\":\"M\",\"2\":\"1546.0\",\"3\":\"0.09384\"},{\"1\":\"M\",\"2\":\"1482.0\",\"3\":\"0.10630\"},{\"1\":\"M\",\"2\":\"840.4\",\"3\":\"0.09742\"},{\"1\":\"B\",\"2\":\"711.8\",\"3\":\"0.07963\"},{\"1\":\"M\",\"2\":\"1386.0\",\"3\":\"0.10010\"},{\"1\":\"M\",\"2\":\"1335.0\",\"3\":\"0.09446\"},{\"1\":\"B\",\"2\":\"579.1\",\"3\":\"0.08302\"},{\"1\":\"B\",\"2\":\"788.5\",\"3\":\"0.09880\"},{\"1\":\"B\",\"2\":\"338.3\",\"3\":\"0.09073\"},{\"1\":\"B\",\"2\":\"562.1\",\"3\":\"0.07517\"},{\"1\":\"B\",\"2\":\"580.6\",\"3\":\"0.08268\"},{\"1\":\"M\",\"2\":\"361.6\",\"3\":\"0.12160\"},{\"1\":\"B\",\"2\":\"386.3\",\"3\":\"0.12370\"},{\"1\":\"B\",\"2\":\"372.7\",\"3\":\"0.07987\"},{\"1\":\"B\",\"2\":\"447.8\",\"3\":\"0.06935\"},{\"1\":\"B\",\"2\":\"462.9\",\"3\":\"0.10420\"},{\"1\":\"B\",\"2\":\"541.8\",\"3\":\"0.08363\"},{\"1\":\"M\",\"2\":\"664.7\",\"3\":\"0.08682\"},{\"1\":\"B\",\"2\":\"462.0\",\"3\":\"0.08108\"},{\"1\":\"B\",\"2\":\"596.6\",\"3\":\"0.07026\"},{\"1\":\"B\",\"2\":\"392.0\",\"3\":\"0.08365\"},{\"1\":\"M\",\"2\":\"1174.0\",\"3\":\"0.10100\"},{\"1\":\"B\",\"2\":\"321.6\",\"3\":\"0.09996\"},{\"1\":\"B\",\"2\":\"234.3\",\"3\":\"0.10390\"},{\"1\":\"M\",\"2\":\"744.7\",\"3\":\"0.11600\"},{\"1\":\"M\",\"2\":\"1407.0\",\"3\":\"0.11670\"},{\"1\":\"B\",\"2\":\"446.2\",\"3\":\"0.10290\"},{\"1\":\"B\",\"2\":\"609.1\",\"3\":\"0.08045\"},{\"1\":\"B\",\"2\":\"558.1\",\"3\":\"0.10590\"},{\"1\":\"B\",\"2\":\"508.3\",\"3\":\"0.08044\"},{\"1\":\"B\",\"2\":\"378.2\",\"3\":\"0.07741\"},{\"1\":\"B\",\"2\":\"431.9\",\"3\":\"0.09087\"},{\"1\":\"M\",\"2\":\"994.0\",\"3\":\"0.12300\"},{\"1\":\"B\",\"2\":\"442.7\",\"3\":\"0.08872\"},{\"1\":\"B\",\"2\":\"525.2\",\"3\":\"0.07351\"},{\"1\":\"B\",\"2\":\"507.6\",\"3\":\"0.09879\"},{\"1\":\"B\",\"2\":\"469.1\",\"3\":\"0.08682\"},{\"1\":\"B\",\"2\":\"370.0\",\"3\":\"0.10040\"},{\"1\":\"B\",\"2\":\"800.0\",\"3\":\"0.09495\"},{\"1\":\"B\",\"2\":\"514.5\",\"3\":\"0.07551\"},{\"1\":\"M\",\"2\":\"991.7\",\"3\":\"0.10360\"},{\"1\":\"B\",\"2\":\"466.1\",\"3\":\"0.08685\"},{\"1\":\"B\",\"2\":\"399.8\",\"3\":\"0.08858\"},{\"1\":\"B\",\"2\":\"373.2\",\"3\":\"0.10770\"},{\"1\":\"B\",\"2\":\"268.8\",\"3\":\"0.07969\"},{\"1\":\"B\",\"2\":\"693.7\",\"3\":\"0.08515\"},{\"1\":\"M\",\"2\":\"719.5\",\"3\":\"0.08320\"},{\"1\":\"B\",\"2\":\"433.8\",\"3\":\"0.09773\"},{\"1\":\"B\",\"2\":\"271.2\",\"3\":\"0.10440\"},{\"1\":\"M\",\"2\":\"803.1\",\"3\":\"0.11200\"},{\"1\":\"B\",\"2\":\"495.0\",\"3\":\"0.08785\"},{\"1\":\"B\",\"2\":\"380.3\",\"3\":\"0.10180\"},{\"1\":\"B\",\"2\":\"409.7\",\"3\":\"0.08546\"},{\"1\":\"B\",\"2\":\"656.1\",\"3\":\"0.10310\"},{\"1\":\"B\",\"2\":\"408.2\",\"3\":\"0.10880\"},{\"1\":\"B\",\"2\":\"575.3\",\"3\":\"0.09057\"},{\"1\":\"B\",\"2\":\"289.7\",\"3\":\"0.10750\"},{\"1\":\"B\",\"2\":\"307.3\",\"3\":\"0.08117\"},{\"1\":\"B\",\"2\":\"333.6\",\"3\":\"0.09816\"},{\"1\":\"B\",\"2\":\"359.9\",\"3\":\"0.08801\"},{\"1\":\"B\",\"2\":\"381.1\",\"3\":\"0.08151\"},{\"1\":\"B\",\"2\":\"501.3\",\"3\":\"0.07896\"},{\"1\":\"M\",\"2\":\"685.0\",\"3\":\"0.09947\"},{\"1\":\"B\",\"2\":\"467.8\",\"3\":\"0.10540\"},{\"1\":\"M\",\"2\":\"1250.0\",\"3\":\"0.11330\"},{\"1\":\"M\",\"2\":\"1110.0\",\"3\":\"0.10180\"},{\"1\":\"B\",\"2\":\"673.7\",\"3\":\"0.08924\"},{\"1\":\"M\",\"2\":\"599.5\",\"3\":\"0.10600\"},{\"1\":\"B\",\"2\":\"509.2\",\"3\":\"0.09136\"},{\"1\":\"B\",\"2\":\"611.2\",\"3\":\"0.08458\"},{\"1\":\"B\",\"2\":\"592.6\",\"3\":\"0.08684\"},{\"1\":\"B\",\"2\":\"606.5\",\"3\":\"0.07966\"},{\"1\":\"B\",\"2\":\"371.5\",\"3\":\"0.08915\"},{\"1\":\"M\",\"2\":\"928.8\",\"3\":\"0.08331\"},{\"1\":\"B\",\"2\":\"585.9\",\"3\":\"0.08817\"},{\"1\":\"B\",\"2\":\"340.9\",\"3\":\"0.08142\"},{\"1\":\"M\",\"2\":\"990.0\",\"3\":\"0.08947\"},{\"1\":\"B\",\"2\":\"441.3\",\"3\":\"0.10300\"},{\"1\":\"M\",\"2\":\"981.6\",\"3\":\"0.09997\"},{\"1\":\"B\",\"2\":\"674.8\",\"3\":\"0.09179\"},{\"1\":\"B\",\"2\":\"659.7\",\"3\":\"0.08388\"},{\"1\":\"M\",\"2\":\"1384.0\",\"3\":\"0.09684\"},{\"1\":\"B\",\"2\":\"432.0\",\"3\":\"0.06613\"},{\"1\":\"M\",\"2\":\"1191.0\",\"3\":\"0.10320\"},{\"1\":\"B\",\"2\":\"442.5\",\"3\":\"0.08437\"},{\"1\":\"B\",\"2\":\"644.2\",\"3\":\"0.10990\"},{\"1\":\"B\",\"2\":\"492.9\",\"3\":\"0.08583\"},{\"1\":\"B\",\"2\":\"557.2\",\"3\":\"0.09245\"},{\"1\":\"B\",\"2\":\"415.1\",\"3\":\"0.09357\"},{\"1\":\"B\",\"2\":\"537.9\",\"3\":\"0.08791\"},{\"1\":\"B\",\"2\":\"520.2\",\"3\":\"0.08369\"},{\"1\":\"B\",\"2\":\"290.9\",\"3\":\"0.07984\"},{\"1\":\"M\",\"2\":\"930.9\",\"3\":\"0.09898\"},{\"1\":\"M\",\"2\":\"2501.0\",\"3\":\"0.10840\"},{\"1\":\"B\",\"2\":\"646.1\",\"3\":\"0.06995\"},{\"1\":\"B\",\"2\":\"412.7\",\"3\":\"0.08508\"},{\"1\":\"B\",\"2\":\"537.3\",\"3\":\"0.07466\"},{\"1\":\"B\",\"2\":\"542.9\",\"3\":\"0.08284\"},{\"1\":\"B\",\"2\":\"536.9\",\"3\":\"0.08675\"},{\"1\":\"B\",\"2\":\"286.3\",\"3\":\"0.08311\"},{\"1\":\"M\",\"2\":\"980.5\",\"3\":\"0.09289\"},{\"1\":\"B\",\"2\":\"408.8\",\"3\":\"0.11750\"},{\"1\":\"B\",\"2\":\"289.1\",\"3\":\"0.08946\"},{\"1\":\"B\",\"2\":\"449.9\",\"3\":\"0.08752\"},{\"1\":\"B\",\"2\":\"686.9\",\"3\":\"0.08098\"},{\"1\":\"B\",\"2\":\"465.4\",\"3\":\"0.07699\"},{\"1\":\"B\",\"2\":\"358.9\",\"3\":\"0.10070\"},{\"1\":\"B\",\"2\":\"506.9\",\"3\":\"0.09040\"},{\"1\":\"B\",\"2\":\"618.4\",\"3\":\"0.08931\"},{\"1\":\"B\",\"2\":\"599.4\",\"3\":\"0.06828\"},{\"1\":\"B\",\"2\":\"404.9\",\"3\":\"0.10460\"},{\"1\":\"M\",\"2\":\"815.8\",\"3\":\"0.10260\"},{\"1\":\"B\",\"2\":\"455.3\",\"3\":\"0.09087\"},{\"1\":\"B\",\"2\":\"602.9\",\"3\":\"0.07991\"},{\"1\":\"B\",\"2\":\"546.3\",\"3\":\"0.10710\"},{\"1\":\"B\",\"2\":\"571.1\",\"3\":\"0.09950\"},{\"1\":\"B\",\"2\":\"747.2\",\"3\":\"0.10430\"},{\"1\":\"B\",\"2\":\"476.7\",\"3\":\"0.09514\"},{\"1\":\"B\",\"2\":\"666.0\",\"3\":\"0.08641\"},{\"1\":\"M\",\"2\":\"1167.0\",\"3\":\"0.10890\"},{\"1\":\"B\",\"2\":\"420.5\",\"3\":\"0.11280\"},{\"1\":\"M\",\"2\":\"857.6\",\"3\":\"0.07497\"},{\"1\":\"B\",\"2\":\"466.5\",\"3\":\"0.08192\"},{\"1\":\"B\",\"2\":\"992.1\",\"3\":\"0.07838\"},{\"1\":\"M\",\"2\":\"1007.0\",\"3\":\"0.10010\"},{\"1\":\"B\",\"2\":\"477.3\",\"3\":\"0.07372\"},{\"1\":\"B\",\"2\":\"538.7\",\"3\":\"0.07335\"},{\"1\":\"B\",\"2\":\"680.9\",\"3\":\"0.09587\"},{\"1\":\"B\",\"2\":\"485.6\",\"3\":\"0.10760\"},{\"1\":\"B\",\"2\":\"480.1\",\"3\":\"0.08928\"},{\"1\":\"M\",\"2\":\"1068.0\",\"3\":\"0.10120\"},{\"1\":\"M\",\"2\":\"1320.0\",\"3\":\"0.10850\"},{\"1\":\"B\",\"2\":\"689.4\",\"3\":\"0.09883\"},{\"1\":\"M\",\"2\":\"595.9\",\"3\":\"0.11620\"},{\"1\":\"B\",\"2\":\"476.3\",\"3\":\"0.11580\"},{\"1\":\"M\",\"2\":\"1682.0\",\"3\":\"0.09342\"},{\"1\":\"B\",\"2\":\"248.7\",\"3\":\"0.16340\"},{\"1\":\"B\",\"2\":\"272.5\",\"3\":\"0.12550\"},{\"1\":\"B\",\"2\":\"453.1\",\"3\":\"0.10960\"},{\"1\":\"B\",\"2\":\"366.5\",\"3\":\"0.11940\"},{\"1\":\"B\",\"2\":\"819.8\",\"3\":\"0.09427\"},{\"1\":\"M\",\"2\":\"731.3\",\"3\":\"0.11830\"},{\"1\":\"B\",\"2\":\"426.0\",\"3\":\"0.08099\"},{\"1\":\"B\",\"2\":\"680.7\",\"3\":\"0.08472\"},{\"1\":\"M\",\"2\":\"556.7\",\"3\":\"0.11060\"},{\"1\":\"B\",\"2\":\"658.8\",\"3\":\"0.09832\"},{\"1\":\"M\",\"2\":\"701.9\",\"3\":\"0.09215\"},{\"1\":\"B\",\"2\":\"391.2\",\"3\":\"0.10490\"},{\"1\":\"M\",\"2\":\"1052.0\",\"3\":\"0.10680\"},{\"1\":\"M\",\"2\":\"1214.0\",\"3\":\"0.10370\"},{\"1\":\"B\",\"2\":\"493.1\",\"3\":\"0.12180\"},{\"1\":\"B\",\"2\":\"493.8\",\"3\":\"0.11250\"},{\"1\":\"B\",\"2\":\"257.8\",\"3\":\"0.13710\"},{\"1\":\"M\",\"2\":\"1841.0\",\"3\":\"0.10300\"},{\"1\":\"B\",\"2\":\"388.1\",\"3\":\"0.08511\"},{\"1\":\"B\",\"2\":\"571.0\",\"3\":\"0.09916\"},{\"1\":\"B\",\"2\":\"293.2\",\"3\":\"0.09492\"},{\"1\":\"B\",\"2\":\"221.3\",\"3\":\"0.10360\"},{\"1\":\"B\",\"2\":\"551.1\",\"3\":\"0.10750\"},{\"1\":\"B\",\"2\":\"468.5\",\"3\":\"0.09003\"},{\"1\":\"B\",\"2\":\"594.2\",\"3\":\"0.12480\"},{\"1\":\"B\",\"2\":\"445.2\",\"3\":\"0.11000\"},{\"1\":\"B\",\"2\":\"422.9\",\"3\":\"0.10730\"},{\"1\":\"B\",\"2\":\"416.2\",\"3\":\"0.10160\"},{\"1\":\"B\",\"2\":\"575.5\",\"3\":\"0.09277\"},{\"1\":\"M\",\"2\":\"1299.0\",\"3\":\"0.09156\"},{\"1\":\"B\",\"2\":\"365.6\",\"3\":\"0.09687\"},{\"1\":\"M\",\"2\":\"1308.0\",\"3\":\"0.10460\"},{\"1\":\"M\",\"2\":\"629.8\",\"3\":\"0.10380\"},{\"1\":\"B\",\"2\":\"406.4\",\"3\":\"0.12360\"},{\"1\":\"B\",\"2\":\"178.8\",\"3\":\"0.08098\"},{\"1\":\"B\",\"2\":\"170.4\",\"3\":\"0.08668\"},{\"1\":\"B\",\"2\":\"402.9\",\"3\":\"0.09984\"},{\"1\":\"B\",\"2\":\"656.4\",\"3\":\"0.08837\"},{\"1\":\"B\",\"2\":\"668.6\",\"3\":\"0.08275\"},{\"1\":\"B\",\"2\":\"538.4\",\"3\":\"0.08671\"},{\"1\":\"B\",\"2\":\"584.8\",\"3\":\"0.09578\"},{\"1\":\"B\",\"2\":\"573.2\",\"3\":\"0.09246\"},{\"1\":\"B\",\"2\":\"324.9\",\"3\":\"0.09434\"},{\"1\":\"B\",\"2\":\"320.8\",\"3\":\"0.08877\"},{\"1\":\"B\",\"2\":\"285.7\",\"3\":\"0.08491\"},{\"1\":\"B\",\"2\":\"361.6\",\"3\":\"0.08192\"},{\"1\":\"B\",\"2\":\"360.5\",\"3\":\"0.07431\"},{\"1\":\"B\",\"2\":\"378.4\",\"3\":\"0.09566\"},{\"1\":\"B\",\"2\":\"507.9\",\"3\":\"0.08276\"},{\"1\":\"B\",\"2\":\"264.0\",\"3\":\"0.09240\"},{\"1\":\"B\",\"2\":\"514.3\",\"3\":\"0.08123\"},{\"1\":\"B\",\"2\":\"321.4\",\"3\":\"0.09030\"},{\"1\":\"B\",\"2\":\"311.7\",\"3\":\"0.10030\"},{\"1\":\"B\",\"2\":\"271.3\",\"3\":\"0.08123\"},{\"1\":\"B\",\"2\":\"657.1\",\"3\":\"0.08473\"},{\"1\":\"B\",\"2\":\"403.5\",\"3\":\"0.09261\"},{\"1\":\"B\",\"2\":\"600.4\",\"3\":\"0.09929\"},{\"1\":\"B\",\"2\":\"386.0\",\"3\":\"0.07449\"},{\"1\":\"M\",\"2\":\"716.9\",\"3\":\"0.10480\"},{\"1\":\"M\",\"2\":\"1347.0\",\"3\":\"0.10990\"},{\"1\":\"M\",\"2\":\"1479.0\",\"3\":\"0.11100\"},{\"1\":\"M\",\"2\":\"1261.0\",\"3\":\"0.09780\"},{\"1\":\"M\",\"2\":\"858.1\",\"3\":\"0.08455\"},{\"1\":\"M\",\"2\":\"1265.0\",\"3\":\"0.11780\"},{\"1\":\"B\",\"2\":\"181.0\",\"3\":\"0.05263\"}],\"options\":{\"columns\":{\"min\":{},\"max\":[10]},\"rows\":{\"min\":[10],\"max\":[10]},\"pages\":{}}}\n  </script>\n</div>\n`````\n:::\n:::\n\n\n\n:::{#callout-important}\nDamit Tidymodels ein Modell als Klassifikation versteht,\nmuss die AV als `factor` definiert sein.\nMan sollte diese Transformation *außerhalb* eines Rezepts druchführen.$\\square$\n:::\n\n### Rezept definieren\n\n\n::: {.cell hash='070-knn_cache/html/unnamed-chunk-7_0b79f5e40f3fcf294142a2c996dc312f'}\n\n```{.r .cell-code}\nuc_recipe <- recipe(Class ~ ., data = unscaled_cancer)\nprint(uc_recipe)\n## Recipe\n## \n## Inputs:\n## \n##       role #variables\n##    outcome          1\n##  predictor          2\n```\n:::\n\n\nUnd jetzt die z-Transformation:\n\n\n\n::: {.cell hash='070-knn_cache/html/unnamed-chunk-8_76990b63e55b98275c272b631e063c88'}\n\n```{.r .cell-code}\nuc_recipe <- \n  uc_recipe |>\n  step_scale(all_predictors()) |>\n  step_center(all_predictors())\n```\n:::\n\n\n\nDie Schritte `prep()` und `bake()` sparen wir uns, da `fit()` und `predict()` bzw. `last_fit()`\ndas für uns besorgen.\n\n### Modell definieren\n\nTidymodels greift auf den Engine (das Paket) [`kknn`](https://www.rdocumentation.org/packages/kknn/versions/1.3.1/topics/kknn) zurück, das im Standard die Eukldische Distanz aus Distanzmaß berechnet.\nDaher muss die Engine nicht extra spezifiziert werden.\n\n\n\n::: {.cell hash='070-knn_cache/html/unnamed-chunk-9_a2401f008e0c6c7f58abadbcd262642c'}\n\n```{.r .cell-code}\nknn_spec <-\n  nearest_neighbor() |>\n  set_mode(\"classification\")\nknn_spec\n## K-Nearest Neighbor Model Specification (classification)\n## \n## Computational engine: kknn\n```\n:::\n\n\nIn der Voreinstellung wird $k=5$ gewählt.\n\nInformationen zum Modell, z.B. `nearest_neighbor` bekommt man mit `show_model_info(\"nearest_neighbor\")`.\n\n\n\n### Workflow definieren\n\n\n::: {.cell hash='070-knn_cache/html/unnamed-chunk-10_1f630b22e616d45688f92278bc8ab008'}\n\n```{.r .cell-code}\nknn_wf <- workflow() |>\n  add_recipe(uc_recipe) |>\n  add_model(knn_spec) \n\n\nknn_fit <- \n  knn_wf |> \n  fit(data = unscaled_cancer)\n\nknn_fit\n## ══ Workflow [trained] ══════════════════════════════════════════════════════════\n## Preprocessor: Recipe\n## Model: nearest_neighbor()\n## \n## ── Preprocessor ────────────────────────────────────────────────────────────────\n## 2 Recipe Steps\n## \n## • step_scale()\n## • step_center()\n## \n## ── Model ───────────────────────────────────────────────────────────────────────\n## \n## Call:\n## kknn::train.kknn(formula = ..y ~ ., data = data, ks = min_rows(5,     data, 5))\n## \n## Type of response variable: nominal\n## Minimal misclassification: 0.1072056\n## Best kernel: optimal\n## Best k: 5\n```\n:::\n\n\n### Vorhersagen\n\n\n\n::: {.cell hash='070-knn_cache/html/unnamed-chunk-11_14ea0398b379026d0a93e791b5925aa8'}\n\n```{.r .cell-code}\nnew_observation <- tibble(Area = c(500, 1500), Smoothness = c(0.075, 0.1))\nprediction <- predict(knn_fit, new_observation)\n\nprediction\n```\n\n::: {.cell-output-display}\n`````{=html}\n<div data-pagedtable=\"false\">\n  <script data-pagedtable-source type=\"application/json\">\n{\"columns\":[{\"label\":[\".pred_class\"],\"name\":[1],\"type\":[\"fct\"],\"align\":[\"left\"]}],\"data\":[{\"1\":\"B\"},{\"1\":\"M\"}],\"options\":{\"columns\":{\"min\":{},\"max\":[10]},\"rows\":{\"min\":[10],\"max\":[10]},\"pages\":{}}}\n  </script>\n</div>\n`````\n:::\n:::\n\n\n\n\n## Krebsdiagnostik 2\n\nIm Kapitel 5 greifen @timbers_data_2022 die Aufteilung in Train- vs. Test-Sample noch nicht auf (aber in Kapitel 6).\n\nDa in diesem Kurs diese Aufteilung aber schon besprochen wurde,\nsoll dies hier auch dargestellt werden.\n\n\n::: {.cell hash='070-knn_cache/html/unnamed-chunk-12_98603037b9573774cc272d0370dca2ee'}\n\n```{.r .cell-code}\ncancer_split <- initial_split(cancer, strata = Class)\ncancer_train <- training(cancer_split)\ncancer_test <- testing(cancer_split) \n```\n:::\n\n\n\n\n### Rezept definieren\n\n\n::: {.cell hash='070-knn_cache/html/unnamed-chunk-13_e2763648e252ea913dd514f963efa051'}\n\n```{.r .cell-code}\ncancer_recipe <- recipe(Class ~ Smoothness + Concavity, data = cancer_train) |>\n  step_scale(all_predictors()) |>\n  step_center(all_predictors())\n```\n:::\n\n\n\n### Modell definieren\n\n\n\n::: {.cell hash='070-knn_cache/html/unnamed-chunk-14_0abddbc65af590258cbee0e016d44cef'}\n\n```{.r .cell-code}\nknn_spec <- nearest_neighbor() |>\n  #set_engine(\"kknn\") |>\n  set_mode(\"classification\")\n```\n:::\n\n\n\n\n### Workflow definieren\n\n\n\n::: {.cell hash='070-knn_cache/html/unnamed-chunk-15_be8a01c4fd2f72cf769fccac67646fbd'}\n\n```{.r .cell-code}\nknn_wf <- workflow() %>%  \n  add_recipe(cancer_recipe) %>% \n  add_model(knn_spec) \n\nknn_wf\n## ══ Workflow ════════════════════════════════════════════════════════════════════\n## Preprocessor: Recipe\n## Model: nearest_neighbor()\n## \n## ── Preprocessor ────────────────────────────────────────────────────────────────\n## 2 Recipe Steps\n## \n## • step_scale()\n## • step_center()\n## \n## ── Model ───────────────────────────────────────────────────────────────────────\n## K-Nearest Neighbor Model Specification (classification)\n## \n## Computational engine: kknn\n```\n:::\n\n\n\n### Vorhersagen\n\nIm Gegensatz zu @timbers_data_2022 verwenden wir hier `last_fit()` und `collect_metrics()`,\nda wir dies  bereits eingeführt haben und künftig darauf aufbauen werden.\n\n\n\n\n::: {.cell hash='070-knn_cache/html/unnamed-chunk-16_bdc78e4b9168ca161cd830eb29752623'}\n\n```{.r .cell-code}\ncancer_test_fit <- last_fit(knn_wf, cancer_split)\n\ncancer_test_fit\n```\n\n::: {.cell-output-display}\n`````{=html}\n<div data-pagedtable=\"false\">\n  <script data-pagedtable-source type=\"application/json\">\n{\"columns\":[{\"label\":[\"splits\"],\"name\":[1],\"type\":[\"list\"],\"align\":[\"right\"]},{\"label\":[\"id\"],\"name\":[2],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\".metrics\"],\"name\":[3],\"type\":[\"list\"],\"align\":[\"right\"]},{\"label\":[\".notes\"],\"name\":[4],\"type\":[\"list\"],\"align\":[\"right\"]},{\"label\":[\".predictions\"],\"name\":[5],\"type\":[\"list\"],\"align\":[\"right\"]},{\"label\":[\".workflow\"],\"name\":[6],\"type\":[\"list\"],\"align\":[\"right\"]}],\"data\":[{\"1\":\"<S3: initial_split>\",\"2\":\"train/test split\",\"3\":\"<tibble[,4]>\",\"4\":\"<tibble[,3]>\",\"5\":\"<tibble[,6]>\",\"6\":\"<S3: workflow>\"}],\"options\":{\"columns\":{\"min\":{},\"max\":[10]},\"rows\":{\"min\":[10],\"max\":[10]},\"pages\":{}}}\n  </script>\n</div>\n`````\n:::\n:::\n\n\n\n### Modellgüte\n\n\n::: {.cell hash='070-knn_cache/html/unnamed-chunk-17_9ab63ac66998d834129027442d27df4e'}\n\n```{.r .cell-code}\ncancer_test_fit %>% collect_metrics()\n```\n\n::: {.cell-output-display}\n`````{=html}\n<div data-pagedtable=\"false\">\n  <script data-pagedtable-source type=\"application/json\">\n{\"columns\":[{\"label\":[\".metric\"],\"name\":[1],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\".estimator\"],\"name\":[2],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\".estimate\"],\"name\":[3],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\".config\"],\"name\":[4],\"type\":[\"chr\"],\"align\":[\"left\"]}],\"data\":[{\"1\":\"accuracy\",\"2\":\"binary\",\"3\":\"0.9020979\",\"4\":\"Preprocessor1_Model1\"},{\"1\":\"roc_auc\",\"2\":\"binary\",\"3\":\"0.9121593\",\"4\":\"Preprocessor1_Model1\"}],\"options\":{\"columns\":{\"min\":{},\"max\":[10]},\"rows\":{\"min\":[10],\"max\":[10]},\"pages\":{}}}\n  </script>\n</div>\n`````\n:::\n:::\n\n\nDie eigentlichen Predictions stecken in der Listenspalte `.predictions` im Fit-Objekt.\n\n\n::: {.cell hash='070-knn_cache/html/unnamed-chunk-18_784b7098ccc96319df542abce9e9cc7c'}\n\n```{.r .cell-code}\nnames(cancer_test_fit)\n## [1] \"splits\"       \"id\"           \".metrics\"     \".notes\"       \".predictions\"\n## [6] \".workflow\"\n```\n:::\n\n\nGenau genommen ist `.predictions` eine Spalte, in der in jeder Zeile (und damit Zelle) eine Tabelle (Tibble) steht. \nWir haben nur eine Zeile und wollen das erste Element dieser Spalte herausziehen, die Vorhersagen (Wahrscheinlichkeit) für begigne Struktur ($\\hat{y}$; die Spalte heißt übrigens `.pred_B`).\nAußerdem brauchen wir die tatsächlichen Diagnosen, $y$, die \"wohnen\" in der Spalte mit Namen `Class`.\nDa hilft `pluck()`:\n\n\n::: {.cell hash='070-knn_cache/html/unnamed-chunk-19_72911eaf116d7687994112bc234c5f6b'}\n\n```{.r .cell-code}\ncancer_test_fit %>%  \n  pluck(\".predictions\", 1) %>% str()\n## tibble [143 × 6] (S3: tbl_df/tbl/data.frame)\n##  $ .pred_B    : num [1:143] 0 0 0 0 0 ...\n##  $ .pred_M    : num [1:143] 1 1 1 1 1 ...\n##  $ .row       : int [1:143] 1 3 5 15 25 31 33 36 37 38 ...\n##  $ .pred_class: Factor w/ 2 levels \"B\",\"M\": 2 2 2 2 2 2 2 1 2 1 ...\n##  $ Class      : Factor w/ 2 levels \"B\",\"M\": 2 2 2 2 2 2 2 2 2 1 ...\n##  $ .config    : chr [1:143] \"Preprocessor1_Model1\" \"Preprocessor1_Model1\" \"Preprocessor1_Model1\" \"Preprocessor1_Model1\" ...\n```\n:::\n\n\n\nNatürlich kann man auch (einfacher) `collect_predictions` verwenden anstelle von `pluck`.\n\nHat man die Vorhersagen (und die wahren Werte) zur Hand, kann man die richtigen und falschen Werte gegenüberstellen lassen.\nSo eine Tabelle nennt man auch eine *Konfusionsmatrix*^[seltener \"Wahrheitsmatrix\"]:\n\n\n\n::: {.cell hash='070-knn_cache/html/comp-conf_7bf2401cfb00dbdd70f20a003586eeb5'}\n\n```{.r .cell-code}\ncancer_test_predictions <- \ncancer_test_fit %>% \n  collect_predictions()  # alternativ: pluck(\".predictions\", 1)\n\nconfusion <- cancer_test_predictions |>\n             conf_mat(truth = Class, estimate = .pred_class)\n\nconfusion\n##           Truth\n## Prediction  B  M\n##          B 85  9\n##          M  5 44\n```\n:::\n\n\n\n### Schwellenwerte\n\nIm Standard wird eine Beobachtung der Klasse mit der höchsten Wahrscheinlichkeit zugeordnet. Möchte man das ändern, hilft das [R-Paket `probably`](https://probably.tidymodels.org/articles/where-to-use.html).\n\n\n\n### Visualisierung\n\nVerbildlichen wir die Konfusionsmatrix, so dass wir sehen welche `B` als `B` klassifiziert wurden und welche `M` als `M` klassifiziert wurden, s. @fig-conf-bm.\n\n\n\n\n::: {.cell hash='070-knn_cache/html/fig-conf-bm_a7fd5b02a1f42fad40b0d212388dfa83'}\n\n```{.r .cell-code}\nautoplot(confusion, type = \"mosaic\")\nautoplot(confusion, type = \"heatmap\") +\n  labs(x = \"Beobachtung\",\n       y = \"Vorhersage\",\n       title = \"Konfusionsmatrix\")\n```\n\n::: {.cell-output-display}\n![Konfusionsmatrix für die Krebsdiagnostik. Die Größe eines Rechtecks ist proportional zu der Anzahl der Fällen dieser Gruppe.](070-knn_files/figure-html/fig-conf-bm-1.png){#fig-conf-bm-1 width=672}\n:::\n\n::: {.cell-output-display}\n![Konfusionsmatrix für die Krebsdiagnostik. Die Größe eines Rechtecks ist proportional zu der Anzahl der Fällen dieser Gruppe.](070-knn_files/figure-html/fig-conf-bm-2.png){#fig-conf-bm-2 width=672}\n:::\n:::\n\n\n\n## Klassifikationsgüte\n\n\n\n### Die vier möglichen Ergebnisse eines Tests\n\n\n\nEin Test kann vier verschiedenen Ergebnisse haben:\n\n\n::: {.cell hash='070-knn_cache/html/class-stats_481fff3aa3a3dace079614e9d54a8e97'}\n::: {.cell-output-display}\n```{=html}\n<div id=\"ibrcrpjtlm\" style=\"padding-left:0px;padding-right:0px;padding-top:10px;padding-bottom:10px;overflow-x:auto;overflow-y:auto;width:auto;height:auto;\">\n<style>html {\n  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Helvetica Neue', 'Fira Sans', 'Droid Sans', Arial, sans-serif;\n}\n\n#ibrcrpjtlm .gt_table {\n  display: table;\n  border-collapse: collapse;\n  margin-left: auto;\n  margin-right: auto;\n  color: #333333;\n  font-size: 16px;\n  font-weight: normal;\n  font-style: normal;\n  background-color: #FFFFFF;\n  width: auto;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #A8A8A8;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #A8A8A8;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n}\n\n#ibrcrpjtlm .gt_heading {\n  background-color: #FFFFFF;\n  text-align: center;\n  border-bottom-color: #FFFFFF;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n}\n\n#ibrcrpjtlm .gt_caption {\n  padding-top: 4px;\n  padding-bottom: 4px;\n}\n\n#ibrcrpjtlm .gt_title {\n  color: #333333;\n  font-size: 125%;\n  font-weight: initial;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-color: #FFFFFF;\n  border-bottom-width: 0;\n}\n\n#ibrcrpjtlm .gt_subtitle {\n  color: #333333;\n  font-size: 85%;\n  font-weight: initial;\n  padding-top: 0;\n  padding-bottom: 6px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-top-color: #FFFFFF;\n  border-top-width: 0;\n}\n\n#ibrcrpjtlm .gt_bottom_border {\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#ibrcrpjtlm .gt_col_headings {\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n}\n\n#ibrcrpjtlm .gt_col_heading {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: normal;\n  text-transform: inherit;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: bottom;\n  padding-top: 5px;\n  padding-bottom: 6px;\n  padding-left: 5px;\n  padding-right: 5px;\n  overflow-x: hidden;\n}\n\n#ibrcrpjtlm .gt_column_spanner_outer {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: normal;\n  text-transform: inherit;\n  padding-top: 0;\n  padding-bottom: 0;\n  padding-left: 4px;\n  padding-right: 4px;\n}\n\n#ibrcrpjtlm .gt_column_spanner_outer:first-child {\n  padding-left: 0;\n}\n\n#ibrcrpjtlm .gt_column_spanner_outer:last-child {\n  padding-right: 0;\n}\n\n#ibrcrpjtlm .gt_column_spanner {\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  vertical-align: bottom;\n  padding-top: 5px;\n  padding-bottom: 5px;\n  overflow-x: hidden;\n  display: inline-block;\n  width: 100%;\n}\n\n#ibrcrpjtlm .gt_group_heading {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: middle;\n  text-align: left;\n}\n\n#ibrcrpjtlm .gt_empty_group_heading {\n  padding: 0.5px;\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  vertical-align: middle;\n}\n\n#ibrcrpjtlm .gt_from_md > :first-child {\n  margin-top: 0;\n}\n\n#ibrcrpjtlm .gt_from_md > :last-child {\n  margin-bottom: 0;\n}\n\n#ibrcrpjtlm .gt_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  margin: 10px;\n  border-top-style: solid;\n  border-top-width: 1px;\n  border-top-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: middle;\n  overflow-x: hidden;\n}\n\n#ibrcrpjtlm .gt_stub {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-right-style: solid;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#ibrcrpjtlm .gt_stub_row_group {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-right-style: solid;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  padding-left: 5px;\n  padding-right: 5px;\n  vertical-align: top;\n}\n\n#ibrcrpjtlm .gt_row_group_first td {\n  border-top-width: 2px;\n}\n\n#ibrcrpjtlm .gt_summary_row {\n  color: #333333;\n  background-color: #FFFFFF;\n  text-transform: inherit;\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#ibrcrpjtlm .gt_first_summary_row {\n  border-top-style: solid;\n  border-top-color: #D3D3D3;\n}\n\n#ibrcrpjtlm .gt_first_summary_row.thick {\n  border-top-width: 2px;\n}\n\n#ibrcrpjtlm .gt_last_summary_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#ibrcrpjtlm .gt_grand_summary_row {\n  color: #333333;\n  background-color: #FFFFFF;\n  text-transform: inherit;\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#ibrcrpjtlm .gt_first_grand_summary_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-top-style: double;\n  border-top-width: 6px;\n  border-top-color: #D3D3D3;\n}\n\n#ibrcrpjtlm .gt_striped {\n  background-color: rgba(128, 128, 128, 0.05);\n}\n\n#ibrcrpjtlm .gt_table_body {\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#ibrcrpjtlm .gt_footnotes {\n  color: #333333;\n  background-color: #FFFFFF;\n  border-bottom-style: none;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n}\n\n#ibrcrpjtlm .gt_footnote {\n  margin: 0px;\n  font-size: 90%;\n  padding-left: 4px;\n  padding-right: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#ibrcrpjtlm .gt_sourcenotes {\n  color: #333333;\n  background-color: #FFFFFF;\n  border-bottom-style: none;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n}\n\n#ibrcrpjtlm .gt_sourcenote {\n  font-size: 90%;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#ibrcrpjtlm .gt_left {\n  text-align: left;\n}\n\n#ibrcrpjtlm .gt_center {\n  text-align: center;\n}\n\n#ibrcrpjtlm .gt_right {\n  text-align: right;\n  font-variant-numeric: tabular-nums;\n}\n\n#ibrcrpjtlm .gt_font_normal {\n  font-weight: normal;\n}\n\n#ibrcrpjtlm .gt_font_bold {\n  font-weight: bold;\n}\n\n#ibrcrpjtlm .gt_font_italic {\n  font-style: italic;\n}\n\n#ibrcrpjtlm .gt_super {\n  font-size: 65%;\n}\n\n#ibrcrpjtlm .gt_footnote_marks {\n  font-style: italic;\n  font-weight: normal;\n  font-size: 75%;\n  vertical-align: 0.4em;\n}\n\n#ibrcrpjtlm .gt_asterisk {\n  font-size: 100%;\n  vertical-align: 0;\n}\n\n#ibrcrpjtlm .gt_indent_1 {\n  text-indent: 5px;\n}\n\n#ibrcrpjtlm .gt_indent_2 {\n  text-indent: 10px;\n}\n\n#ibrcrpjtlm .gt_indent_3 {\n  text-indent: 15px;\n}\n\n#ibrcrpjtlm .gt_indent_4 {\n  text-indent: 20px;\n}\n\n#ibrcrpjtlm .gt_indent_5 {\n  text-indent: 25px;\n}\n</style>\n<table class=\"gt_table\">\n  <caption>Vier Arten von Ergebnissen von Klassifikationen</caption>\n  \n  <thead class=\"gt_col_headings\">\n    <tr>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_left\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"Wahrheit\">Wahrheit</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_left\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"Als negativ (-) vorhergesagt\">Als negativ (-) vorhergesagt</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_left\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"Als positiv (+) vorhergesagt\">Als positiv (+) vorhergesagt</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_left\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"Summe\">Summe</th>\n    </tr>\n  </thead>\n  <tbody class=\"gt_table_body\">\n    <tr><td headers=\"Wahrheit\" class=\"gt_row gt_left\">In Wahrheit negativ (-)</td>\n<td headers=\"Als negativ (-) vorhergesagt\" class=\"gt_row gt_left\">Richtig negativ (RN)</td>\n<td headers=\"Als positiv (+) vorhergesagt\" class=\"gt_row gt_left\">Falsch positiv (FP)</td>\n<td headers=\"Summe\" class=\"gt_row gt_left\">N</td></tr>\n    <tr><td headers=\"Wahrheit\" class=\"gt_row gt_left\">In Wahrheit positiv (+)</td>\n<td headers=\"Als negativ (-) vorhergesagt\" class=\"gt_row gt_left\">Falsch negativ (FN)</td>\n<td headers=\"Als positiv (+) vorhergesagt\" class=\"gt_row gt_left\">Richtig positiv (RN)</td>\n<td headers=\"Summe\" class=\"gt_row gt_left\">P</td></tr>\n    <tr><td headers=\"Wahrheit\" class=\"gt_row gt_left\">Summe</td>\n<td headers=\"Als negativ (-) vorhergesagt\" class=\"gt_row gt_left\">N*</td>\n<td headers=\"Als positiv (+) vorhergesagt\" class=\"gt_row gt_left\">P*</td>\n<td headers=\"Summe\" class=\"gt_row gt_left\">N+P</td></tr>\n  </tbody>\n  \n  \n</table>\n</div>\n```\n:::\n:::\n\n\n\nVon den vier Ergebnissen sind zwei falsch. \nEin Test kann also zwei Arten von Fehlern machen, s. @fig-4arten.\nDort kann man die Punkte im roten Hintergrund als *kranke* Menschen verstehen (links des schrägen Strichs); auf der anderen Seite sind man gesunde Menschen (grüner Hintergrund).\nDie Punkte in der Ellipse zeigen die Klassifikationsergebnisse bzw. -fehler.\n\n1. Fehler erster Art: Gesunde als krank klassifizieren (\"Fehlalarm\")\n2. Fehler zweiter Art: Kranke als gesund klassifizieren (\"Übersehfehler\")\n\n\n![Zwei Fehlerarten einer Klassifikation](img/Binary-classification-measures.svg (2).png){#fig-4arten width=\"50%\"}\n\n[Quelle: Von Nichtich - Eigenes Werk, Gemeinfrei](https://commons.wikimedia.org/w/index.php?curid=3494986)\n\n\nBei [Wikipedia](https://de.wikipedia.org/wiki/Beurteilung_eines_bin%C3%A4ren_Klassifikators) findet sich eine nützliche Erläuterung der Kennzahlen der Klassifikationsgüte, vgl. @fig-sens-fn und @fig-spec-fp.\n\n:::{#fig-sens-fn layout-ncol=2}\n\n![Sensitivität](img/sens-440px-Binary-classification-file_sensitivity.svg.png){#fig-sens}\n\n![FN-Rate](img/fn-rate-Binary-classification-file_false_negative_rate.svg.png){#fig-fn-rante}\n\nSensitivität und Falsch-Negativrate addieren sich zu 1.\n:::\n\n\n:::{#fig-spec-fp layout-ncol=2}\n\n![Spezifität](img/spec-Binary-classification-file_specifity.svg.png){#fig-spec}\n\n![FP-Rate](img/fp-rate-Binary-classification-file_fallout.svg.png){#fig-fp-rate}\n\nSpezifität und FP-Rate addieren sich zu 1.\n:::\n\n\n:::{.callout-note}\nEs ist einfach, in nur einem der beiden Fehlerarten gut abzuschneiden.\nSo könnte ein Test, alle Personen als *krank* klassifizieren. \nDamit hätte er auomatisch keine Übersehfehler. Leider wären aber potenziell viele Fehlalarme dabei.\nDie Höhe des Übersehfehler und die Höhe der Fehlalarme müssen daher nicht gleich sein.\nMan muss daher beide Fehlerarten berücksichtigen, um die Güte eines Tests einzuschätzen.\nWelcher Fehler schwerer wiegt, der Fehlalarm oder der Übersehfehler,\nhängt vom Sachgegenstand ab und ist keine Frage der Statistik.$\\square$\n:::\n\n\n\n\n\n### Kennzahlen der Klassfikation\n\n\nEs gibt eine verwirrende Vielfalt von Kennzahlen,\num die Güte einer Klassifikation einzuschätzen.\nIn @tbl-diag-stats sind einige davon aufgeführt.\n\n\n\n::: {#tbl-diag-stats .cell tbl-cap='Geläufige Kennwerte der Klassifikation. F: Falsch. R: Richtig. P: Positiv. N: Negativ' hash='070-knn_cache/html/tbl-diag-stats_1634b605727fe7281b0d74d2a9f87db5'}\n::: {.cell-output-display}\n|Name                |Definition        |Synonyme                                           |\n|:-------------------|:-----------------|:--------------------------------------------------|\n|FP-Rate             |FP/N              |Alphafehler, Typ-1-Fehler, 1-Spezifität, Fehlalarm |\n|RP-Rate             |RP/N              |Power, Sensitivität, 1-Betafehler, Recall          |\n|FN-Rate             |FN/N              |Fehlender Alarm, Befafehler                        |\n|RN-Rate             |RN/N              |Spezifität, 1-Alphafehler                          |\n|Pos. Vorhersagewert |RP/P*             |Präzision, Relevanz                                |\n|Neg. Vorhersagewert |RN/N*             |Segreganz                                          |\n|Richtigkeit         |(RP+RN)/(N+P)     |Korrektklassifikationsrate, Gesamtgenauigkeit      |\n|Youden-Index        |RN-Rate+RP-Rate-1 |Durchschnitt von Sensitivität und Spezifität       |\n:::\n:::\n\n\n\n\n\nIn @modar, Kap. 19.6, findet sich einige Erklärung zu Kennzahlen der Klassifikationsgüte.\n\nAuf der [Seite des R-Pakets `yardstick`](https://yardstick.tidymodels.org/reference/index.html) finden Sie eine Übersicht an unterstützter Kennzahlen.\n\n\n### Schwellenwerte der Klassifiktion\n\nIm Standard wird ein Fall der Klasse zugeordnet, die die höchste Wahrscheinlichkeit hat.\nMit dem R-Paket [`probably`](https://probably.tidymodels.org/articles/where-to-use.html) kann man (als Teil eines Post-Processing des Modellierens) diese Schwellenwerte^[engl. thresholds, cutoffs] ändern.\n\n:::{#exm-thresholds}\nDa eine Ärztin auf keinen Fall einen Krebsfall übersehen möchte - den Übersehfehler als deutlich schlimmer einschätzt als den Fehlalarm - setzt sie die Schwelle für \"Gesund\" auf 95%.$\\square$\n:::\n\n\n### ROC-Kurve\n\n\n\nEine ROC-Kurve^[Receiver Operating Characteristic Curve] ist ein Graph, der die Modellgüte eines Klassfikationsmodells *zu allen Schwellenwerten* aufzeigt.\nEine ROC-Kurve ist eine nützliche und gebräuchliche Methode zur Bestimmung der Klassifikationsgüte eines Modells.\n\nDie Kurve hat zwei Parameter:\n\n- TP-Rate (Y-Achse)\n- FP-Rate (X-Achse)\n\n\nPraktisch würde man für die vorhergesagten Wahrscheinlichkeiten eines Klassifikationsmodells viele Schwellenwerte anlegen, z.B. von 0%, 1%, ..., 100%.\nFür jeden Schwellenwert berechnet man die vorhergesagte Klasse.\nIn `tidymodels` besorgt [`roc_curve`](https://yardstick.tidymodels.org/reference/roc_curve.html) diesen Job:\n\n\n\n\n::: {.cell hash='070-knn_cache/html/unnamed-chunk-21_b7ed71749931443a1b60ed28ba5acb2e'}\n\n```{.r .cell-code}\ncancer_roc <- \ncancer_test_predictions %>% \n  roc_curve(truth = Class, .pred_B)\ncancer_roc\n```\n\n::: {.cell-output-display}\n`````{=html}\n<div data-pagedtable=\"false\">\n  <script data-pagedtable-source type=\"application/json\">\n{\"columns\":[{\"label\":[\".threshold\"],\"name\":[1],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"specificity\"],\"name\":[2],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"sensitivity\"],\"name\":[3],\"type\":[\"dbl\"],\"align\":[\"right\"]}],\"data\":[{\"1\":\"-Inf\",\"2\":\"0.0000000\",\"3\":\"1.0000000\"},{\"1\":\"0.00\",\"2\":\"0.0000000\",\"3\":\"1.0000000\"},{\"1\":\"0.04\",\"2\":\"0.6037736\",\"3\":\"0.9444444\"},{\"1\":\"0.12\",\"2\":\"0.6226415\",\"3\":\"0.9444444\"},{\"1\":\"0.20\",\"2\":\"0.6981132\",\"3\":\"0.9444444\"},{\"1\":\"0.24\",\"2\":\"0.7169811\",\"3\":\"0.9444444\"},{\"1\":\"0.28\",\"2\":\"0.7358491\",\"3\":\"0.9444444\"},{\"1\":\"0.32\",\"2\":\"0.7547170\",\"3\":\"0.9444444\"},{\"1\":\"0.36\",\"2\":\"0.7735849\",\"3\":\"0.9444444\"},{\"1\":\"0.40\",\"2\":\"0.7924528\",\"3\":\"0.9444444\"},{\"1\":\"0.52\",\"2\":\"0.8301887\",\"3\":\"0.9444444\"},{\"1\":\"0.56\",\"2\":\"0.8490566\",\"3\":\"0.9333333\"},{\"1\":\"0.60\",\"2\":\"0.8679245\",\"3\":\"0.9111111\"},{\"1\":\"0.64\",\"2\":\"0.8679245\",\"3\":\"0.9000000\"},{\"1\":\"0.64\",\"2\":\"0.8679245\",\"3\":\"0.8555556\"},{\"1\":\"0.68\",\"2\":\"0.9056604\",\"3\":\"0.8555556\"},{\"1\":\"0.72\",\"2\":\"0.9056604\",\"3\":\"0.8222222\"},{\"1\":\"0.76\",\"2\":\"0.9245283\",\"3\":\"0.8111111\"},{\"1\":\"0.80\",\"2\":\"0.9245283\",\"3\":\"0.7888889\"},{\"1\":\"0.84\",\"2\":\"0.9245283\",\"3\":\"0.7555556\"},{\"1\":\"0.88\",\"2\":\"0.9433962\",\"3\":\"0.7555556\"},{\"1\":\"0.96\",\"2\":\"0.9433962\",\"3\":\"0.7111111\"},{\"1\":\"1.00\",\"2\":\"0.9433962\",\"3\":\"0.6555556\"},{\"1\":\"Inf\",\"2\":\"1.0000000\",\"3\":\"0.0000000\"}],\"options\":{\"columns\":{\"min\":{},\"max\":[10]},\"rows\":{\"min\":[10],\"max\":[10]},\"pages\":{}}}\n  </script>\n</div>\n`````\n:::\n:::\n\n\nMit `autoplot` kann man dann die ROC-Kurve zeichnen, s. @fig-roc1.\n\n\n::: {.cell hash='070-knn_cache/html/fig-roc1_544322a7fab955a57e569c969052296a'}\n\n```{.r .cell-code}\ncancer_test_predictions %>% \n  roc_curve(truth = Class, .pred_B) %>% \n  autoplot()\n```\n\n::: {.cell-output-display}\n![ROC-Kurve für das Fallbeispiel der Krebsdiagnostik](070-knn_files/figure-html/fig-roc1-1.png){#fig-roc1 width=672}\n:::\n:::\n\n\n\nDie *Fläche unter der Kurve* (area under curve) ist ein Maß für die Güte des Tests. @fig-example-rocs aus @modar stellt drei Beispiele von Klassifikationsgüten dar: sehr gute (A), gute (B) und schlechte (C). \nEin hohe Klassifikationsgüte zeigt sich daran, dass eine hohe Richtig-Positiv-Rate mit einer geringen Fehlalarmquote einhergeht: Wir finden alle Kranken, aber nur die Kranken. Die AUC-Kurve \"hängt oben links an der Decke\". \nEin schlechter Klassifikator trifft so gut wie ein Münzwurf: Ist das Ereignis selten, hat er eine hohe Falsch-Positiv-Rate und eine geringe Falsch-Negativ-Rate. \nIst das Ereignis hingegen häufig, liegen die Fehlerhöhen genau umgekehrt: Eine hohe Richtig-Positiv-Rate geht dann mit einer hohen Falsch-Positiv-Rate einher.\n\n\n\n\n::: {.cell fig.asp='0.3' hash='070-knn_cache/html/fig-example-rocs_d88f9b073c4f0d45dcd99627cce6565a'}\n::: {.cell-output-display}\n![Beispiel für eine sehr gute (A), gute (B) und schlechte (C) Klassifikation](070-knn_files/figure-html/fig-example-rocs-1.png){#fig-example-rocs width=100%}\n:::\n:::\n\n\n\n\n\n\n\n\n\n\n\n\n### Krebstest-Beispiel\n\nBetrachten wir [diese Daten](https://raw.githubusercontent.com/sebastiansauer/datascience1/main/data/Krebstest.csv) eines fiktiven Krebstest, aber mit realistischen Werte, s. @fig-krebstest.\n\n\n\n::: {.cell hash='070-knn_cache/html/unnamed-chunk-23_bf3f04cfc6115e3b3e2c5df01260d976'}\n\n:::\n\n::: {.cell hash='070-knn_cache/html/fig-krebstest_ba790c2d4d8db3d80bad97831decfb43'}\n\n```\n## # A tibble: 1 × 7\n##   format width height colorspace matte filesize density\n##   <chr>  <int>  <int> <chr>      <lgl>    <int> <chr>  \n## 1 PNG      500    429 sRGB       TRUE     40643 72x72\n```\n\n::: {.cell-output-display}\n![Kennwerte zu tatsächlichem und laut Test Krebs-Status](070-knn_files/figure-html/fig-krebstest-1.png){#fig-krebstest width=250}\n:::\n:::\n\n\nWie gut ist dieser Test?\nBerechnen wir einige Kennzahlen.^[aus dem Paket `{yardstick}`, das Teil von Tidymodels ist. [Hier](https://yardstick.tidymodels.org/) ist die Hilfeseite zum Paket.]\n\nDa die Funktionen zur Klassifikation stets einen Faktor wollen,\nwandeln wir die relevanten Spalten zuerst in einen Faktor um (aktuell sind es numerische Spalten).\n\n\n\n::: {.cell hash='070-knn_cache/html/unnamed-chunk-25_7abdb36b9bedddbe28a7401d7f048dcb'}\n\n```{.r .cell-code}\nkrebstest <-\n  krebstest  %>% \n  mutate(Krebs = factor(Krebs),\n         Test = factor(Test))\n```\n:::\n\n\n\nKonfusionsmatrix:\n\n\n::: {.cell hash='070-knn_cache/html/unnamed-chunk-26_99ac6038eec46090a012e6936825535b'}\n\n```{.r .cell-code}\ncm_krebs <- conf_mat(krebstest, truth = Krebs, estimate = Test)\ncm_krebs\n##           Truth\n## Prediction  0  1\n##          0 84  2\n##          1 11  3\n```\n:::\n\n::: {.cell hash='070-knn_cache/html/unnamed-chunk-27_78422419c315cbf8f3472e61fda2b4e4'}\n\n```{.r .cell-code}\nautoplot(cm_krebs)\n```\n\n::: {.cell-output-display}\n![](070-knn_files/figure-html/unnamed-chunk-27-1.png){width=672}\n:::\n:::\n\n\n\nGesamtgenauigkeit:\n\n\n\n::: {.cell hash='070-knn_cache/html/unnamed-chunk-28_7ec36926d050858a9bcdb216b2165c1e'}\n\n```{.r .cell-code}\naccuracy(krebstest, truth = Krebs, estimate = Test)\n```\n\n::: {.cell-output-display}\n`````{=html}\n<div data-pagedtable=\"false\">\n  <script data-pagedtable-source type=\"application/json\">\n{\"columns\":[{\"label\":[\".metric\"],\"name\":[1],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\".estimator\"],\"name\":[2],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\".estimate\"],\"name\":[3],\"type\":[\"dbl\"],\"align\":[\"right\"]}],\"data\":[{\"1\":\"accuracy\",\"2\":\"binary\",\"3\":\"0.87\"}],\"options\":{\"columns\":{\"min\":{},\"max\":[10]},\"rows\":{\"min\":[10],\"max\":[10]},\"pages\":{}}}\n  </script>\n</div>\n`````\n:::\n:::\n\n\n\n:::{#callout-important}\nDie Kennzahl der Gesamtgenauigkeit zählt nur den Anteil richtiger Klassifikation.\nSind z.B. 95% der Menschen gesund, und wir klassifizieren alle Menschen als gesund,\nerreichen wir auf einfachem Weg eine Gesamtgenauigkeit von 95%.\nTrotz dieses scheinbar hohen Werts haben wir alle kranken Menschen fehlklassifiziert.\nIn dem Fall, wie die Klassen (krank vs. gesund) ungleich groß sind, sinkt die Nützlichkeit dieser Kennzahl.\nAber sie kann als Referenzwert herhalten, an dem sich andere Modelle messen lassen müssen.$\\square$\n:::\n\n\n\nSensitivität:\n\n\n::: {.cell hash='070-knn_cache/html/unnamed-chunk-29_8ac5cf2d36685fc18b202e6639c149c0'}\n\n```{.r .cell-code}\nsens(krebstest, truth = Krebs, estimate = Test)\n```\n\n::: {.cell-output-display}\n`````{=html}\n<div data-pagedtable=\"false\">\n  <script data-pagedtable-source type=\"application/json\">\n{\"columns\":[{\"label\":[\".metric\"],\"name\":[1],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\".estimator\"],\"name\":[2],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\".estimate\"],\"name\":[3],\"type\":[\"dbl\"],\"align\":[\"right\"]}],\"data\":[{\"1\":\"sens\",\"2\":\"binary\",\"3\":\"0.8842105\"}],\"options\":{\"columns\":{\"min\":{},\"max\":[10]},\"rows\":{\"min\":[10],\"max\":[10]},\"pages\":{}}}\n  </script>\n</div>\n`````\n:::\n:::\n\n\nSpezifität:\n\n\n::: {.cell hash='070-knn_cache/html/unnamed-chunk-30_d2bc555f01791ce4e907b0f91e72417e'}\n\n```{.r .cell-code}\nyardstick::spec(krebstest, truth = Krebs, estimate = Test)\n```\n\n::: {.cell-output-display}\n`````{=html}\n<div data-pagedtable=\"false\">\n  <script data-pagedtable-source type=\"application/json\">\n{\"columns\":[{\"label\":[\".metric\"],\"name\":[1],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\".estimator\"],\"name\":[2],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\".estimate\"],\"name\":[3],\"type\":[\"dbl\"],\"align\":[\"right\"]}],\"data\":[{\"1\":\"spec\",\"2\":\"binary\",\"3\":\"0.6\"}],\"options\":{\"columns\":{\"min\":{},\"max\":[10]},\"rows\":{\"min\":[10],\"max\":[10]},\"pages\":{}}}\n  </script>\n</div>\n`````\n:::\n:::\n\n\n[Cohens Kappa](https://de.wikipedia.org/wiki/Cohens_Kappa):\n\n\n::: {.cell hash='070-knn_cache/html/unnamed-chunk-31_1c883e307c65da5bd53177622a63dc2c'}\n\n```{.r .cell-code}\nyardstick::kap(krebstest, truth = Krebs, estimate = Test)\n```\n\n::: {.cell-output-display}\n`````{=html}\n<div data-pagedtable=\"false\">\n  <script data-pagedtable-source type=\"application/json\">\n{\"columns\":[{\"label\":[\".metric\"],\"name\":[1],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\".estimator\"],\"name\":[2],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\".estimate\"],\"name\":[3],\"type\":[\"dbl\"],\"align\":[\"right\"]}],\"data\":[{\"1\":\"kap\",\"2\":\"binary\",\"3\":\"0.2613636\"}],\"options\":{\"columns\":{\"min\":{},\"max\":[10]},\"rows\":{\"min\":[10],\"max\":[10]},\"pages\":{}}}\n  </script>\n</div>\n`````\n:::\n:::\n\n\nEin Wert von 0 zeigt eine Klassifikation an, die von einer Zufallzuordnung nicht zu unterscheiden ist.\nEin Wert von 1 zeigt eine perfekte Klassifikation an.\nDamit ist Kappa eine Kennzahl der Gesamtgenauigkeit einer Klassifikation,\ndie das Problem ungleicher Klassengrößen, worunter die Kennzahl Gesamtgenauigkeit leider,\numgeht.\n\n\nPositiver Vorhersagewert:\n\n\n::: {.cell hash='070-knn_cache/html/unnamed-chunk-32_d6103de75118f67f68352802390e9fbe'}\n\n```{.r .cell-code}\nppv(krebstest, truth = Krebs, estimate = Test)\n```\n\n::: {.cell-output-display}\n`````{=html}\n<div data-pagedtable=\"false\">\n  <script data-pagedtable-source type=\"application/json\">\n{\"columns\":[{\"label\":[\".metric\"],\"name\":[1],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\".estimator\"],\"name\":[2],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\".estimate\"],\"name\":[3],\"type\":[\"dbl\"],\"align\":[\"right\"]}],\"data\":[{\"1\":\"ppv\",\"2\":\"binary\",\"3\":\"0.9767442\"}],\"options\":{\"columns\":{\"min\":{},\"max\":[10]},\"rows\":{\"min\":[10],\"max\":[10]},\"pages\":{}}}\n  </script>\n</div>\n`````\n:::\n:::\n\n\nNegativer Vorhersagewert:\n\n\n::: {.cell hash='070-knn_cache/html/unnamed-chunk-33_a997936d02d52a11bd83c967533b1932'}\n\n```{.r .cell-code}\nnpv(krebstest, truth = Krebs, estimate = Test)\n```\n\n::: {.cell-output-display}\n`````{=html}\n<div data-pagedtable=\"false\">\n  <script data-pagedtable-source type=\"application/json\">\n{\"columns\":[{\"label\":[\".metric\"],\"name\":[1],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\".estimator\"],\"name\":[2],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\".estimate\"],\"name\":[3],\"type\":[\"dbl\"],\"align\":[\"right\"]}],\"data\":[{\"1\":\"npv\",\"2\":\"binary\",\"3\":\"0.2142857\"}],\"options\":{\"columns\":{\"min\":{},\"max\":[10]},\"rows\":{\"min\":[10],\"max\":[10]},\"pages\":{}}}\n  </script>\n</div>\n`````\n:::\n:::\n\n\nWährend Sensitivität und Spezitivität sehr hoch sind,\nist die der negative Vorhersagewert sehr gering:\n\nWenn man einen positiven Test erhält, ist die \nWahrscheinlichkeit, in Wahrheit krank zu sein gering, zum Glück!\n\n\n\nMit `metrics` kann man sich eine Auswahl von Metriken (der Modellgüte) anzeigen lassen:\n\n\n::: {.cell hash='070-knn_cache/html/unnamed-chunk-34_663cb5a54c7bf644a8e84940354cc0cc'}\n\n```{.r .cell-code}\nmetrics(krebstest, truth = Krebs, estimate = Test)\n```\n\n::: {.cell-output-display}\n`````{=html}\n<div data-pagedtable=\"false\">\n  <script data-pagedtable-source type=\"application/json\">\n{\"columns\":[{\"label\":[\".metric\"],\"name\":[1],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\".estimator\"],\"name\":[2],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\".estimate\"],\"name\":[3],\"type\":[\"dbl\"],\"align\":[\"right\"]}],\"data\":[{\"1\":\"accuracy\",\"2\":\"binary\",\"3\":\"0.8700000\"},{\"1\":\"kap\",\"2\":\"binary\",\"3\":\"0.2613636\"}],\"options\":{\"columns\":{\"min\":{},\"max\":[10]},\"rows\":{\"min\":[10],\"max\":[10]},\"pages\":{}}}\n  </script>\n</div>\n`````\n:::\n:::\n\n\nMan kann sich auch eine \"eigene\" Funktion `metrics` erstellen, bzw. `metrics` ändern:\n\n\n::: {.cell hash='070-knn_cache/html/unnamed-chunk-35_e22f67d8700409f5e446638899912aa1'}\n\n```{.r .cell-code}\nmy_metrics <- metric_set(accuracy, ppv, sensitivity)\n```\n:::\n\n\nDiese Funktion ruft man dann genauso auf wie `metrics`:\n\n\n::: {.cell hash='070-knn_cache/html/unnamed-chunk-36_017289ea64b4aa776fea9866f0d3e3ae'}\n\n```{.r .cell-code}\nmy_metrics(krebstest, truth = Krebs, estimate = Test)\n```\n\n::: {.cell-output-display}\n`````{=html}\n<div data-pagedtable=\"false\">\n  <script data-pagedtable-source type=\"application/json\">\n{\"columns\":[{\"label\":[\".metric\"],\"name\":[1],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\".estimator\"],\"name\":[2],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\".estimate\"],\"name\":[3],\"type\":[\"dbl\"],\"align\":[\"right\"]}],\"data\":[{\"1\":\"accuracy\",\"2\":\"binary\",\"3\":\"0.8700000\"},{\"1\":\"ppv\",\"2\":\"binary\",\"3\":\"0.9767442\"},{\"1\":\"sensitivity\",\"2\":\"binary\",\"3\":\"0.8842105\"}],\"options\":{\"columns\":{\"min\":{},\"max\":[10]},\"rows\":{\"min\":[10],\"max\":[10]},\"pages\":{}}}\n  </script>\n</div>\n`````\n:::\n:::\n\n\n\n\n## kNN als Regression\n\n\nDer kNN-Algorithmus kann nicht nur zur Klassifikation, sondern auch zur Regression (numerische Vorhersage) verwendet werden.\n\nDie Vorhersage ist dann nicht der *Modus* der Nachbarn, sondern der *Mittelwert* der Nachbarn.\n\n\n\n\n## Aufgaben\n\n- Arbeiten Sie sich so gut als möglich durch [diese Analyse zum Verlauf von Covid-Fällen](https://github.com/sebastiansauer/covid-icu)\n- [Fallstudie zur Modellierung einer logististischen Regression mit tidymodels](https://onezero.blog/modelling-binary-logistic-regression-using-tidymodels-library-in-r-part-1/)\n- [Fallstudie zu Vulkanausbrüchen](https://juliasilge.com/blog/multinomial-volcano-eruptions/)\n- [Fallstudie Himalaya](https://juliasilge.com/blog/himalayan-climbing/)\n- [Fallstudie Immobilienpreise von Jan Kirzenz](https://www.kirenz.com/post/2021-02-17-r-classification-tidymodels/); diese Fallstudie beinhaltet mehrere Lernalgorithmen, die Sie vielleicht noch nicht kennen. \n\nFalls Sie in einer Fallstudie auf Inhalte treffen, die Sie noch nicht kennen: Im Zweifel einfach ignorieren.\n\n\n## Fazit\n\n*Keep kalm and proceed* 😎\n\n\n\n\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<link href=\"site_libs/pagedtable-1.1/css/pagedtable.css\" rel=\"stylesheet\" />\n<script src=\"site_libs/pagedtable-1.1/js/pagedtable.js\"></script>\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}